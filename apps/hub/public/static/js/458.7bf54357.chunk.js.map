{"version":3,"file":"static/js/458.7bf54357.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/AlertTitle/alertTitleClasses.js","../node_modules/@mui/material/AlertTitle/AlertTitle.js","../node_modules/lodash/sumBy.js","../node_modules/lodash/isFinite.js","modules/invoices/pages/InvoiceForm/form_data/FormDataContext.js","modules/invoices/pages/InvoiceForm/form_data/FormDataProvider.js","modules/invoices/pages/InvoiceForm/form_data/useFormData.js","modules/invoices/pages/InvoiceForm/FormErrors.js","modules/invoices/pages/InvoiceForm/InvoiceGeneral.js","modules/invoices/pages/InvoiceForm/InvoiceQuickAccess.js","modules/invoices/pages/InvoiceForm/InvoiceTable.js","modules/invoices/pages/InvoiceForm/Operations.js","modules/invoices/pages/InvoiceForm/InvoiceForm.js","components/SingleFieldDialog.js","../node_modules/@mui/icons-material/Remove.js","modules/invoices/Utils.js","../node_modules/lodash/_baseSum.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAlertTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiAlertTitle', slot);\n}\nconst alertTitleClasses = generateUtilityClasses('MuiAlertTitle', ['root']);\nexport default alertTitleClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Typography from '../Typography';\nimport { getAlertTitleUtilityClass } from './alertTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAlertTitleUtilityClass, classes);\n};\nconst AlertTitleRoot = styled(Typography, {\n  name: 'MuiAlertTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  return {\n    fontWeight: theme.typography.fontWeightMedium,\n    marginTop: -2\n  };\n});\nconst AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlertTitle'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AlertTitleRoot, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AlertTitle;","var baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nmodule.exports = sumBy;\n","var root = require('./_root');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite;\n\n/**\n * Checks if `value` is a finite primitive number.\n *\n * **Note:** This method is based on\n * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n * @example\n *\n * _.isFinite(3);\n * // => true\n *\n * _.isFinite(Number.MIN_VALUE);\n * // => true\n *\n * _.isFinite(Infinity);\n * // => false\n *\n * _.isFinite('3');\n * // => false\n */\nfunction isFinite(value) {\n  return typeof value == 'number' && nativeIsFinite(value);\n}\n\nmodule.exports = isFinite;\n","import { createContext } from \"react\";\r\n\r\nconst FormDataContext = createContext();\r\n\r\nexport default FormDataContext;","\r\nimport { useEffect } from \"react\";\r\nimport { useMiddleware, useTask } from \"../../../../../Application\";\r\nimport { useAuth } from \"../../../../../auth\";\r\nimport useForm from \"../../../../../utils/useForm\";\r\nimport FormDataContext from \"./FormDataContext\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport useNavigateTask from \"../../../../../utils/useNavigateTask\";\r\n\r\n\r\nconst calculateUnitPrice = (product, formPricing) => {\r\n    if (!product || !formPricing || !product.prices?.length) return 0;\r\n    const matchingPrice = product.prices.find(price => price.pricing._id === formPricing.id);\r\n    return matchingPrice?.amount ?? 0;\r\n};\r\n\r\nexport default function FormDataProvider({ injectedHooks = {}, defaultValues = {}, children }) {\r\n    const { inject } = useAuth();\r\n    const middleware = useMiddleware('Invoices.Main')\r\n\r\n    const createNewItem = (product, pricing) => ({\r\n        item: product,\r\n        amount: 1,\r\n        discount: 0,\r\n        unitPrice: calculateUnitPrice(product, pricing),\r\n        ...Object.assign({}, ...(inject('Invoices', 'InvoiceForm.newItemValues') || [])),\r\n    });\r\n\r\n    const initialValues = {\r\n        status: '',\r\n        customer: null,\r\n        issuedAt: new Date(),\r\n        number: '',\r\n        pricing: null,\r\n        note: '',\r\n        items: [createNewItem()],\r\n        ...Object.assign({}, ...(inject('Invoices', 'InvoiceForm.initialValues') || [])),\r\n        ...defaultValues\r\n    }\r\n\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const navigateTask = useNavigateTask();\r\n    const taskList = useTask('Invoices.list');\r\n\r\n    const form = useForm({\r\n        initialValues,\r\n        handlePost: data => middleware.createOrUpdate({ ...data }),\r\n        onSubmit: () => {\r\n            enqueueSnackbar('فاکتور ثبت گردید.');\r\n            navigateTask(taskList, { replace: true })\r\n        }\r\n    })\r\n\r\n    const initializeFormAsync = async () => {\r\n        let response = await middleware.getDefaultPricing();\r\n        const pricing = response.pricing;\r\n\r\n        let number = defaultValues.number;\r\n        if (!defaultValues.id) {\r\n            response = await middleware.getNewNumber();\r\n            number = response.number;\r\n        }\r\n\r\n        form.reset({ ...initialValues, number, pricing });\r\n    }\r\n\r\n    useEffect(() => {\r\n        initializeFormAsync();\r\n    }, []);\r\n\r\n    const addRow = (product = null) => {\r\n        const items = form.getValue('items');\r\n        const pricing = form.getValue('pricing');\r\n\r\n        if (product) {\r\n            // Check if the product already exists in the items array\r\n            const existingItemIndex = items.findIndex(item => item.item?._id === product._id);\r\n\r\n            if (existingItemIndex !== -1) {\r\n                // If the product exists, increment its amount\r\n                items[existingItemIndex].amount += 1;\r\n            } else if (items.length > 0 && !items[items.length - 1].item) {\r\n                // If the last item's `item` is empty, update it with the new product\r\n                items[items.length - 1] = {\r\n                    ...items[items.length - 1],\r\n                    item: product,\r\n                    unitPrice: calculateUnitPrice(product, pricing)\r\n                };\r\n            } else {\r\n                // Otherwise, add a new item\r\n                items.push(createNewItem(product, pricing));\r\n            }\r\n        } else {\r\n            // If no product is provided, add a new empty item\r\n            items.push(createNewItem(null, pricing));\r\n        }\r\n\r\n        form.setValue('items', items);\r\n    };\r\n\r\n    const removeRow = (index) => {\r\n        const items = form.getValue('items');\r\n        const pricing = form.getValue('pricing');\r\n        form.setValue('items', index === 0 && items.length === 1 ? [createNewItem(null, pricing)] : items.filter((i, idx) => idx !== index))\r\n    }\r\n\r\n    return (\r\n        <FormDataContext.Provider value={{ ...form, addRow, removeRow }}>\r\n            {children}\r\n\r\n            {inject('Invoices', 'InvoiceForm.Footer', { ...form, ...injectedHooks })}\r\n        </FormDataContext.Provider>\r\n    )\r\n}","import { useContext } from \"react\"\r\nimport FormDataContext from \"./FormDataContext\"\r\n\r\nconst useFormData = () => useContext(FormDataContext);\r\nexport default useFormData;","import { Alert, AlertTitle, Collapse } from \"@mui/material\";\r\nimport { useFormData } from \"./form_data\";\r\n\r\nfunction FormErrors({ ...props }) {\r\n    const { errors } = useFormData();\r\n\r\n    return (\r\n        <Collapse in={Object.keys(errors).length > 0}>\r\n            <Alert color=\"error\" icon={false} {...props}>\r\n                <AlertTitle>خطای اعتبارسنجی</AlertTitle>\r\n                <ul>\r\n                    {Object.keys(errors).map((key, index) => (\r\n                        <li key={index}>{errors[key][0]}</li>\r\n                    ))}\r\n                </ul>\r\n            </Alert>\r\n        </Collapse>\r\n    )\r\n}\r\n\r\nexport default FormErrors;","import AdapterJalali from '@date-io/date-fns-jalali';\r\nimport { Icon as Iconify } from \"@iconify/react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card, CardContent, CardHeader, Collapse,\r\n    Stack,\r\n    styled,\r\n    SvgIcon,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport { DatePicker } from \"@mui/x-date-pickers\";\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport format from \"date-fns-jalali/format\";\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useComponent } from \"../../../../Application\";\r\nimport NumberTextField from \"../../../../components/NumberTextField\";\r\nimport SingleFieldDialog from \"../../../../components/SingleFieldDialog\";\r\nimport useDialog from \"../../../../utils/useDialog\";\r\nimport { useFormData } from './form_data';\r\nimport EditableInlineField from '../../../../components/EditableInlineField';\r\n\r\n\r\nconst StyledEditableTypography = styled(Typography)(({ theme }) => ({\r\n    position: 'relative',\r\n    cursor: \"pointer\",\r\n    transition: theme.transitions.create('padding'),\r\n\r\n    '& .MuiSvgIcon-root': {\r\n        position: 'absolute',\r\n        right: 0,\r\n        opacity: 0,\r\n        transition: theme.transitions.create('opacity')\r\n    },\r\n\r\n    '&:hover': {\r\n        paddingInlineEnd: '1.25em',\r\n    },\r\n\r\n    '&:hover .MuiSvgIcon-root': {\r\n        opacity: 1,\r\n    }\r\n}));\r\n\r\nfunction EditableTypography({ children, ...props }) {\r\n    return (\r\n        <StyledEditableTypography as='span' {...props}>\r\n            {children}\r\n            <SvgIcon fontSize=\"small\" sx={{ verticalAlign: 'middle' }}>\r\n                <Iconify icon=\"solar:pen-linear\" />\r\n            </SvgIcon>\r\n        </StyledEditableTypography>\r\n    )\r\n}\r\n\r\n\r\nconst InvoiceGeneral = () => {\r\n    const { t } = useTranslation([\"global\", \"invoices\"]);\r\n\r\n    const { getValue, setValue } = useFormData();\r\n\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    const PersonSelectDialog = useComponent(\"People.PersonSelectDialog\");\r\n    const {\r\n        isOpen: isCustomerDialogOpen,\r\n        close: closeCusomersDialog,\r\n        open: openCustomersDialog\r\n    } = useDialog(false);\r\n\r\n\r\n    const PricingSelectDialog = useComponent(\"Pricing.PricingsDialog\");\r\n    const {\r\n        isOpen: isPricingsDialogOpen,\r\n        close: closePricingsDialog,\r\n        open: openPricingsDialog\r\n    } = useDialog(false);\r\n\r\n    const [fieldDialogProps, setFieldDialogProps] = useState({ open: false });\r\n    const openField = (renderContent, options = {}) => {\r\n        return () => {\r\n            setFieldDialogProps({\r\n                renderContent,\r\n                ...options,\r\n                open: true,\r\n            });\r\n        };\r\n    };\r\n\r\n    const data = [\r\n        // {\r\n        //     label: 'وضعیت',\r\n        //     value: getValue('status')\r\n        // },\r\n        {\r\n            label: 'مشتری',\r\n            value: getValue('customer')?.fullName || '-----',\r\n            onClick: openCustomersDialog\r\n        },\r\n        {\r\n            label: 'تاریخ',\r\n            renderValue: (\r\n                <EditableInlineField\r\n                    defaultValue={getValue('issuedAt')}\r\n                    onSubmit={issuedAt => setValue('issuedAt', issuedAt)}\r\n                    InlineComponent={Typography}\r\n                    inlineComponentProps={{\r\n                        fontWeight: 600,\r\n                        variant: \"body1\",\r\n                        sx: { display: \"flex\", justifyContent: 'flex-end', width: '100%' }\r\n                    }}\r\n                    renderInlineValue={val => format(val, 'yyyy/MM/dd')}\r\n                    renderForm={({ value, setValue, toFocusRef }) => (\r\n                        <Box>\r\n                            <LocalizationProvider dateAdapter={AdapterJalali}>\r\n                                <DatePicker\r\n                                    mask=\"____/__/__\"\r\n                                    onChange={setValue}\r\n                                    value={value}\r\n                                    renderInput={\r\n                                        (params) => (\r\n                                            <TextField\r\n                                                InputLabelProps={{ shrink: true }}\r\n                                                fullWidth={true}\r\n                                                size=\"small\"\r\n                                                inputRef={toFocusRef}\r\n                                                {...params}\r\n                                            />\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </Box>\r\n                    )}\r\n                />\r\n            ),\r\n        },\r\n        {\r\n            label: 'شماره',\r\n            renderValue: (\r\n                <EditableInlineField\r\n                    defaultValue={getValue('number')}\r\n                    onSubmit={number => setValue('number', number)}\r\n                    InlineComponent={Typography}\r\n                    inlineComponentProps={{\r\n                        fontWeight: 600,\r\n                        variant: \"body1\",\r\n                        sx: { display: \"flex\", justifyContent: 'flex-end', width: '100%' }\r\n                    }}\r\n                    renderForm={({ value, setValue, toFocusRef }) => (\r\n                        <NumberTextField\r\n                            fullWidth={true}\r\n                            size=\"small\"\r\n                            dir=\"ltr\"\r\n                            value={value}\r\n                            onChange={e => setValue(e.target.value)}\r\n                            required\r\n                            inputProps={{ ref: toFocusRef }}\r\n                        // error={Boolean(errors.unitPrice)}\r\n                        />\r\n                    )}\r\n                />\r\n            )\r\n        },\r\n    ]\r\n\r\n    const expandedData = [\r\n        {\r\n            label: 'تعرفه',\r\n            value: getValue('pricing')?.name || '-----',\r\n            onClick: openPricingsDialog\r\n        },\r\n        {\r\n            label: 'توضیحات',\r\n            value: getValue('note') || <Typography color=\"inherit\" sx={{ opacity: 0.5 }} display=\"inline\">شرح دهید...</Typography>,\r\n            props: { direction: \"column\", alignItems: \"flex-start\" },\r\n            onClick: openField(\r\n                ({ value, setValue }) => (\r\n                    <TextField\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth={true}\r\n                        multiline\r\n                        rows={3}\r\n                        label=\"توضیحات فاکتور\"\r\n                        value={value}\r\n                        onChange={(e) =>\r\n                            setValue(e.target.value)\r\n                        }\r\n                        autoFocus\r\n                    />\r\n                ),\r\n                {\r\n                    title: \"توضیحات فاکتور\",\r\n                    defaultValue: getValue('note'),\r\n                    onSubmit: (note) => {\r\n                        setValue('note', note)\r\n                        setFieldDialogProps({ open: false });\r\n                    },\r\n                }\r\n            )\r\n        },\r\n    ]\r\n\r\n    const renderDataList = (data) => {\r\n        return (\r\n            <Stack>\r\n                {data.map((row, index) => (\r\n                    <Stack direction=\"row\" alignItems=\"center\" gap={2} key={index} sx={{ mb: 2 }} {...(row.props ?? {})}>\r\n                        <Typography variant=\"body1\" sx={{ flexGrow: 1 }}>{row.label}</Typography>\r\n\r\n                        <Box display=\"inline-flex\" justifyContent=\"flex-end\" alignItems=\"center\" flexGrow=\"1\">\r\n                            {row.renderValue || (\r\n                                <EditableTypography\r\n                                    sx={{ marginInlineStart: \"auto\" }}\r\n                                    onClick={row.onClick}\r\n                                    fontWeight={600}\r\n                                    variant=\"body1\"\r\n                                >\r\n                                    {row.value}\r\n                                </EditableTypography>\r\n                            )}\r\n                        </Box>\r\n                    </Stack>\r\n                ))}\r\n            </Stack>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card variant=\"outlined\">\r\n                <CardHeader title=\"عمومی\" titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n                <CardContent>\r\n                    {renderDataList(data)}\r\n\r\n                    <Collapse in={expanded}>\r\n                        {renderDataList(expandedData)}\r\n                    </Collapse>\r\n\r\n                    <Button\r\n                        endIcon={<Iconify icon=\"solar:alt-arrow-down-bold\" />} sx={{ marginInlineStart: \"auto\" }}\r\n                        onClick={() => setExpanded(!expanded)}\r\n                    >\r\n                        {t(\"مشخصات بیشتر\")}\r\n                    </Button>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <PersonSelectDialog\r\n                open={isCustomerDialogOpen}\r\n                onClose={closeCusomersDialog}\r\n                selected={getValue('customer')}\r\n                roles={['customer']}\r\n                onSelect={(customer) => {\r\n                    setValue('customer', customer);\r\n                    closeCusomersDialog();\r\n                }}\r\n                onClear={() => {\r\n                    setValue('customer', '');\r\n                    closeCusomersDialog();\r\n                }}\r\n            />\r\n\r\n            <PricingSelectDialog\r\n                selectable={true}\r\n                open={isPricingsDialogOpen}\r\n                onClose={closePricingsDialog}\r\n                selected={getValue('pricing')}\r\n                onChange={(pricing) => {\r\n                    setValue('pricing', pricing);\r\n                    closePricingsDialog();\r\n                }}\r\n                onClear={() => {\r\n                    setValue('pricing', '');\r\n                    closePricingsDialog();\r\n                }}\r\n            />\r\n\r\n            <SingleFieldDialog\r\n                {...fieldDialogProps}\r\n                onClose={() => setFieldDialogProps({ open: false })}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvoiceGeneral","import { Button, Card, CardContent, CardHeader, Stack, Typography } from \"@mui/material\";\r\nimport useMiddleware from \"../../../../Application/useMiddleware\";\r\nimport useFetch from \"../../../../utils/useFetch\";\r\nimport useFormData from \"./form_data/useFormData\";\r\n\r\nexport default function InvoiceQuickAccess() {\r\n    const middleware = useMiddleware('Invoices.Main');\r\n\r\n    const { data: products, loading, reload } = useFetch({\r\n        handler: () => middleware.quickAccess(),\r\n    });\r\n\r\n    const { addRow } = useFormData();\r\n\r\n    return (\r\n        <Card variant=\"outlined\">\r\n            <CardHeader title=\"دسترسی سریع\" titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n            <CardContent>\r\n                {products.data?.length < 1 && <Typography textAlign=\"center\">موردی وجود ندارد</Typography>}\r\n\r\n                {products.data?.length > 0 && (\r\n                    <Stack direction=\"row\" flexWrap=\"wrap\" gap={1}>\r\n                        {products.data.map((product, index) => <Button\r\n                            variant=\"outlined\"\r\n                            color=\"inherit\"\r\n                            key={index}\r\n                            onClick={() => addRow(product)}\r\n                        >{product.name}</Button>)}\r\n                    </Stack>\r\n                )}\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","import { Icon as Iconify } from \"@iconify/react\";\r\nimport IconAdd from \"@mui/icons-material/Add\";\r\nimport IconRemove from \"@mui/icons-material/Remove\";\r\nimport { Box, Button, Card, CardActions, CardContent, CardHeader, Divider, IconButton, InputAdornment, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tooltip, Typography, styled } from \"@mui/material\";\r\nimport flatten from \"lodash/flatten\";\r\nimport isFinite from \"lodash/isFinite\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { useMemo, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useComponent } from \"../../../../Application\";\r\nimport { useAuth } from \"../../../../auth\";\r\nimport NumberTextField from \"../../../../components/NumberTextField\";\r\nimport pricify from \"../../../../utils/pricify\";\r\nimport Utils from \"../../Utils\";\r\nimport StyledTableCell from \"../../components/StyledTableCell\";\r\nimport { useFormData } from \"./form_data\";\r\nimport EditableInlineField from \"../../../../components/EditableInlineField\";\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n    '& .MuiTableCell-root': {\r\n        backgroundColor: theme.palette.background.paper\r\n    }\r\n}));\r\n\r\nexport default function InvoiceItems({ injectedHooks = {} }) {\r\n    const { inject } = useAuth();\r\n    const { t } = useTranslation([\"global\", \"invoices\"]);\r\n\r\n    const { getValue, setValue, addRow, removeRow, ...form } = useFormData();\r\n\r\n    const subtotal = useMemo(() => Utils.getInvoiceSubtotal(getValue('items')), [getValue('items')])\r\n\r\n    const ProductSelectDialog = useComponent('Products.ProductSelectDialog');\r\n    const [productSelectDialogProps, setProductSelectDialogProps] = useState({ open: false });\r\n\r\n    const tableDefs = sortBy([\r\n        {\r\n            title: '#',\r\n            headerCellProps: {\r\n                align: \"center\",\r\n            },\r\n            rowCellProps: {\r\n                align: \"center\",\r\n                width: 75\r\n            },\r\n            renderCell: (row, index) => (\r\n                <Typography fontSize=\"1.25rem\" fontWeight={900}>{index + 1}</Typography>\r\n            ),\r\n            priority: 100\r\n        },\r\n        {\r\n            title: t(\"کالا/خدمت\"),\r\n            headerCellProps: {\r\n                align: \"center\"\r\n            },\r\n            rowCellProps: (row, index) => ({\r\n                align: \"center\",\r\n                width: 200,\r\n                onClick: () => setProductSelectDialogProps({ open: true, rowIndex: index, selected: row.item }),\r\n                sx: { cursor: 'pointer' }\r\n            }),\r\n            renderCell: (row, index) => row.item?.name || t('انتخاب کنید...'),\r\n            priority: 200\r\n        }, {\r\n            title: t(\"مقدار\"),\r\n            headerCellProps: {\r\n                align: \"center\"\r\n            },\r\n            rowCellProps: {\r\n                align: \"center\",\r\n                width: 175\r\n            },\r\n            renderCell: (row, index) => (\r\n                <Box sx={{ display: \"flex\", justifyContent: 'center', alignItems: 'center' }}>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => setValue(`items[${index}].amount`, (row.amount ?? 1) - 1)}\r\n                        disabled={row.amount < 2}\r\n                    >\r\n                        <IconRemove fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    <Typography sx={{ mx: 1, verticalAlign: 'middle' }}>\r\n                        {row.amount}\r\n                    </Typography>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => setValue(`items[${index}].amount`, (row.amount ?? 1) + 1)}\r\n                    // disabled={getProductMaxQty(itm.product) < 1}\r\n                    >\r\n                        <IconAdd fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                </Box>\r\n            ),\r\n            priority: 300\r\n        }, {\r\n            title: <>{t(\"قیمت واحد\")} <Typography variant=\"caption\">(ریال)</Typography></>,\r\n            headerCellProps: {\r\n                align: \"center\",\r\n                width: 175,\r\n            },\r\n            rowCellComponent: EditableInlineField,\r\n            rowCellProps: (row, index) => ({\r\n                align: \"center\",\r\n                width: 175,\r\n                defaultValue: row.unitPrice,\r\n                onSubmit: newValue => setValue(`items[${index}].unitPrice`, newValue),\r\n                InlineComponent: StyledTableCell,\r\n                renderInlineValue: pricify,\r\n                inlineComponentProps: { align: \"center\" },\r\n                renderForm: ({ value, setValue, toFocusRef, handleSubmit }) => (\r\n                    <StyledTableCell align=\"center\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <NumberTextField\r\n                                fullWidth={true}\r\n                                size=\"small\"\r\n                                dir=\"ltr\"\r\n                                InputProps={{\r\n                                    inputRef: toFocusRef,\r\n                                    startAdornment: <InputAdornment position=\"start\"><small>ریال</small></InputAdornment>\r\n                                }}\r\n                                value={value}\r\n                                onChange={e => setValue(e.target.value)}\r\n                                required\r\n                            />\r\n                        </form>\r\n                    </StyledTableCell>\r\n                )\r\n            }),\r\n            renderCell: (row, index) => null,\r\n            priority: 400\r\n        }, {\r\n            title: <>{t(\"تخفیف\")} <Typography variant=\"caption\">(ریال)</Typography></>,\r\n            headerCellProps: {\r\n                align: \"center\",\r\n                width: 175\r\n            },\r\n            rowCellComponent: EditableInlineField,\r\n            rowCellProps: (row, index) => ({\r\n                align: \"center\",\r\n                width: 175,\r\n                defaultValue: row.discount,\r\n                onSubmit: newValue => setValue(`items[${index}].discount`, newValue),\r\n                InlineComponent: StyledTableCell,\r\n                renderInlineValue: pricify,\r\n                inlineComponentProps: { align: \"center\" },\r\n                renderForm: ({ value, setValue, toFocusRef, handleSubmit }) => (\r\n                    <StyledTableCell align=\"center\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <NumberTextField\r\n                                fullWidth={true}\r\n                                size=\"small\"\r\n                                dir=\"ltr\"\r\n                                InputProps={{\r\n                                    inputRef: toFocusRef,\r\n                                    startAdornment: <InputAdornment position=\"start\"><small>ریال</small></InputAdornment>\r\n                                }}\r\n                                value={value}\r\n                                onChange={e => setValue(e.target.value)}\r\n                                required\r\n                            />\r\n                        </form>\r\n                    </StyledTableCell>\r\n                )\r\n            }),\r\n            renderCell: (row, index) => null,\r\n            priority: 500\r\n        }, {\r\n            title: <>{t(\"مبلغ خالص\")} <Typography variant=\"caption\">(ریال)</Typography></>,\r\n            headerCellProps: {\r\n                align: \"center\"\r\n            },\r\n            rowCellProps: {\r\n                align: \"center\",\r\n                width: 175\r\n            },\r\n            renderCell: (row, index) => {\r\n                const total = Utils.getItemTotalPrice(row);\r\n                return isFinite(total) ? pricify(total) : 0;\r\n            },\r\n            priority: 600\r\n        },\r\n        ...flatten((inject('Invoices', 'InvoiceForm.tableDefinitions', { getValue, setValue, addRow, removeRow, ...form, ...injectedHooks }) || []))\r\n    ], o => o.priority);\r\n\r\n    return (\r\n        <>\r\n            <Card variant=\"outlined\" sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n                <CardHeader\r\n                    title=\"اقلام فاکتور\"\r\n                    action={\r\n                        <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            startIcon={<Iconify icon=\"solar:add-circle-linear\" />}\r\n                            onClick={() => addRow()}\r\n                        >\r\n                            ردیف جدید\r\n                        </Button>\r\n                    }\r\n                    titleTypographyProps={{ variant: \"subtitle2\" }}\r\n                />\r\n                <CardContent sx={{ p: 0 }}>\r\n                    <TableContainer sx={{ maxHeight: '400px', overflow: 'auto' }}>\r\n                        <Table size=\"small\" stickyHeader>\r\n                            <StyledTableHead>\r\n                                <TableRow>\r\n                                    {tableDefs.map((def, index) => {\r\n                                        if (!def.render && !def.renderCell && !def.field)\r\n                                            return null;\r\n\r\n                                        return (\r\n                                            <TableCell key={index} {...def.headerCellProps} sx={{ whiteSpace: \"nowrap\" }}>\r\n                                                {def.title}\r\n                                            </TableCell>\r\n                                        )\r\n                                    })}\r\n                                    <TableCell />\r\n                                </TableRow>\r\n                            </StyledTableHead>\r\n                            <TableBody>\r\n                                {getValue('items').map((row, index) => {\r\n                                    return (\r\n                                        <TableRow key={index}>\r\n                                            {tableDefs.map((def, defIndex) => {\r\n                                                if (!def.render && !def.renderCell && !def.field)\r\n                                                    return null;\r\n\r\n                                                const CellComponent = def.rowCellComponent || StyledTableCell;\r\n\r\n                                                return (\r\n                                                    <CellComponent key={defIndex} {...(typeof def.rowCellProps == \"function\" ? def.rowCellProps(row, index) : def.rowCellProps)}>\r\n                                                        {def.renderCell ? def.renderCell(row, index) : (def.render ? def.render(row, index) : row[def.field])}\r\n                                                    </CellComponent>\r\n                                                )\r\n                                            })}\r\n\r\n                                            <StyledTableCell align=\"center\">\r\n                                                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                                                    <Tooltip title=\"حذف سطر\" enterDelay={2000}>\r\n                                                        <IconButton size=\"small\" onClick={() => removeRow(index)}>\r\n                                                            <Iconify icon=\"solar:trash-bin-2-broken\" />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Stack>\r\n                                            </StyledTableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </CardContent>\r\n                <Divider sx={{ mt: 'auto' }} />\r\n                <CardActions sx={{ justifyContent: \"flex-end\" }}>\r\n                    <Typography variant=\"subtitle2\">مجموع: {isFinite(subtotal) ? pricify(subtotal) : 0} <Typography variant=\"caption\">ریال</Typography></Typography>\r\n                </CardActions>\r\n            </Card>\r\n\r\n            <ProductSelectDialog\r\n                {...productSelectDialogProps}\r\n                onSelect={addRow}\r\n                onClose={() => setProductSelectDialogProps({ open: false })}\r\n            />\r\n        </>\r\n    )\r\n}","import { Box, Button, Card, Stack } from \"@mui/material\";\r\nimport { useAuth } from \"../../../../auth\";\r\nimport { useFormData } from \"./form_data\";\r\n\r\nexport default function Operations({ injectedHooks }) {\r\n    const { inject } = useAuth();\r\n    const { register, handleSubmit, loading, reset, getValue, setValue } = useFormData();\r\n\r\n    return (\r\n        <Card variant=\"outlined\">\r\n            <Box sx={{ p: 2 }}>\r\n                <Stack alignItems=\"end\">\r\n                    {inject('Invoices', 'InvoiceForm.Payment', { register, loading, getValue, setValue, reset, ...injectedHooks })}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        // size=\"large\"\r\n                        // fullWidth\r\n                        // disabled={loading}\r\n                        onClick={handleSubmit}\r\n                    >ثبت فاکتور</Button>\r\n                </Stack>\r\n            </Box>\r\n        </Card>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { useTask } from \"../../../../Application\";\r\nimport { useAuth } from \"../../../../auth\";\r\nimport ResponsiveContainer from \"../../../../components/ResponsiveContainer\";\r\nimport { TabView } from \"../../../../tabs\";\r\nimport { FormDataProvider, useFormData } from \"./form_data\";\r\nimport FormErrors from \"./FormErrors\";\r\nimport InvoiceGeneral from \"./InvoiceGeneral\";\r\nimport InvoiceQuickAccess from \"./InvoiceQuickAccess\";\r\nimport InvoiceTable from \"./InvoiceTable\";\r\nimport Operations from \"./Operations\";\r\n\r\n\r\nconst InjectConatiner = ({ injectedHooks }) => {\r\n    const { inject } = useAuth();\r\n    const form = useFormData();\r\n\r\n    return (\r\n        <>\r\n            {inject('Invoices', 'InvoiceForm.PostTableGrid', { ...form, ...injectedHooks })}\r\n        </>\r\n    )\r\n}\r\n\r\nconst InvoiceForm = () => {\r\n    const { inject } = useAuth();\r\n    const task = useTask('Invoices.create');\r\n\r\n    const injectedHooks = Object.assign({}, ...(inject('Invoices', 'InvoiceForm.Hooks') || []));\r\n\r\n    return (\r\n        <FormDataProvider injectedHooks={injectedHooks}>\r\n            <TabView {...task}>\r\n                <ResponsiveContainer maxWidth=\"xl\" fullHeight>\r\n                    <FormErrors sx={{ mb: 2 }} />\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={3}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <InvoiceGeneral />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <InvoiceQuickAccess />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={9} container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <InvoiceTable injectedHooks={injectedHooks} />\r\n                            </Grid>\r\n                            <InjectConatiner injectedHooks={injectedHooks} />\r\n                            <Grid item sx={{ marginInlineStart: \"auto\" }} xs={4}>\r\n                                <Operations injectedHooks={injectedHooks} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </ResponsiveContainer>\r\n            </TabView>\r\n        </FormDataProvider>\r\n    )\r\n}\r\n\r\nexport default InvoiceForm;","import CloseIcon from \"@mui/icons-material/CloseOutlined\";\r\nimport {\r\n\tBox,\r\n\tButton,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tDivider,\r\n\tIconButton,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport ResponsiveDialog from \"./ResponsiveDialog\";\r\n\r\nconst SingleFieldDialog = ({\r\n\ttitle,\r\n\tdefaultValue,\r\n\tonSubmit,\r\n\topen,\r\n\tonClose,\r\n\trenderContent,\r\n\tdialogProps = {},\r\n}) => {\r\n\tconst [value, setValue] = useState(defaultValue);\r\n\tuseEffect(() => setValue(open ? defaultValue : null), [open]);\r\n\r\n\treturn (\r\n\t\t<ResponsiveDialog\r\n\t\t\topen={open}\r\n\t\t\tonClose={onClose}\r\n\t\t\tdialogProps={{ fullWidth: true, maxWidth: \"xs\", ...dialogProps }}\r\n\t\t>\r\n\t\t\t<DialogTitle\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Box>{title}</Box>\r\n\t\t\t\t<IconButton onClick={onClose} size=\"small\">\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<Divider />\r\n\t\t\t<DialogContent>\r\n\t\t\t\t{renderContent && renderContent({ value, setValue })}\r\n\t\t\t</DialogContent>\r\n\t\t\t<Divider />\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tonClick={(e) => onSubmit(value)}\r\n\t\t\t\t>\r\n\t\t\t\t\tثبت\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Box sx={{ flexGrow: 1 }}></Box>\r\n\t\t\t\t<Button type=\"button\" onClick={onClose}>\r\n\t\t\t\t\tانصراف\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</ResponsiveDialog>\r\n\t);\r\n};\r\n\r\nexport default SingleFieldDialog;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5v-2h14z\"\n}), 'Remove');","import sumBy from \"lodash/sumBy\";\r\n\r\nclass Utils {\r\n    static getItemPureTotal = (item) => item.amount * item.unitPrice;\r\n    static getItemDiscountPrice = (item) => item.discount || 0;\r\n    static getItemTotalPrice = (item) => this.getItemPureTotal(item) - this.getItemDiscountPrice(item);\r\n    // static getItemTotalPrice = (item) => this.getItemPureTotal(item) - (item.discount || 0);\r\n\r\n    static getFactorPrice = (items, factor) => {\r\n        return (\r\n            factor.unit === 'PRICE' ?\r\n                factor.amount :\r\n                (factor.amount / 100 * this.getInvoiceSubtotal(items))\r\n        ) * (factor.type === 'REDUCER' ? -1 : 1);\r\n    }\r\n\r\n    static getInvoiceSubtotal = (items) => sumBy(items, (itm) => this.getItemTotalPrice(itm));\r\n    static getInvoiceTotal = (items, factors) => Number(this.getInvoiceSubtotal(items)) +\r\n        sumBy(factors, factor => this.getFactorPrice(items, factor));\r\n}\r\n\r\nexport default Utils","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n"],"names":["getAlertTitleUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AlertTitleRoot","styled","Typography","name","overridesResolver","props","styles","root","theme","fontWeight","typography","fontWeightMedium","marginTop","React","inProps","ref","useDefaultProps","className","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsx","_extends","gutterBottom","component","clsx","baseIteratee","require","baseSum","module","exports","array","iteratee","length","nativeIsFinite","isFinite","value","createContext","calculateUnitPrice","product","formPricing","_product$prices","_matchingPrice$amount","prices","matchingPrice","find","price","pricing","_id","id","amount","FormDataProvider","injectedHooks","defaultValues","children","inject","useAuth","middleware","useMiddleware","createNewItem","item","discount","unitPrice","Object","assign","initialValues","status","customer","issuedAt","Date","number","note","items","enqueueSnackbar","useSnackbar","navigateTask","useNavigateTask","taskList","useTask","form","useForm","handlePost","data","createOrUpdate","onSubmit","replace","useEffect","async","response","getDefaultPricing","getNewNumber","reset","initializeFormAsync","_jsxs","FormDataContext","Provider","addRow","getValue","existingItemIndex","findIndex","_item$item","push","setValue","removeRow","index","filter","i","idx","useFormData","useContext","errors","Collapse","in","keys","Alert","color","icon","AlertTitle","map","key","StyledEditableTypography","position","cursor","transition","transitions","create","right","opacity","paddingInlineEnd","EditableTypography","as","SvgIcon","fontSize","sx","verticalAlign","Iconify","InvoiceGeneral","_getValue","_getValue2","t","useTranslation","expanded","setExpanded","useState","PersonSelectDialog","useComponent","isOpen","isCustomerDialogOpen","close","closeCusomersDialog","open","openCustomersDialog","useDialog","PricingSelectDialog","isPricingsDialogOpen","closePricingsDialog","openPricingsDialog","fieldDialogProps","setFieldDialogProps","label","fullName","onClick","renderValue","EditableInlineField","defaultValue","InlineComponent","inlineComponentProps","variant","display","justifyContent","width","renderInlineValue","val","format","renderForm","toFocusRef","Box","LocalizationProvider","dateAdapter","AdapterJalali","DatePicker","mask","onChange","renderInput","params","TextField","InputLabelProps","shrink","fullWidth","size","inputRef","NumberTextField","dir","e","target","required","inputProps","expandedData","direction","alignItems","openField","renderContent","options","multiline","rows","autoFocus","title","renderDataList","Stack","row","_row$props","gap","mb","flexGrow","marginInlineStart","_Fragment","Card","CardHeader","titleTypographyProps","CardContent","Button","endIcon","onClose","selected","roles","onSelect","onClear","selectable","SingleFieldDialog","InvoiceQuickAccess","_products$data","_products$data2","products","loading","reload","useFetch","handler","quickAccess","textAlign","flexWrap","StyledTableHead","TableHead","backgroundColor","palette","background","paper","InvoiceItems","subtotal","useMemo","Utils","getInvoiceSubtotal","ProductSelectDialog","productSelectDialogProps","setProductSelectDialogProps","tableDefs","sortBy","headerCellProps","align","rowCellProps","renderCell","priority","rowIndex","_row$item","IconButton","_row$amount","disabled","IconRemove","mx","_row$amount2","IconAdd","rowCellComponent","newValue","StyledTableCell","pricify","handleSubmit","InputProps","startAdornment","InputAdornment","total","getItemTotalPrice","flatten","o","height","flexDirection","action","startIcon","p","TableContainer","maxHeight","overflow","Table","stickyHeader","TableRow","def","render","field","TableCell","whiteSpace","TableBody","defIndex","CellComponent","spacing","Tooltip","enterDelay","Divider","mt","CardActions","Operations","register","InjectConatiner","InvoiceForm","task","TabView","ResponsiveContainer","maxWidth","fullHeight","FormErrors","Grid","container","xs","InvoiceTable","dialogProps","ResponsiveDialog","DialogTitle","CloseIcon","DialogContent","DialogActions","type","_interopRequireDefault","_createSvgIcon","_jsxRuntime","default","jsx","d","_Utils","getItemPureTotal","getItemDiscountPrice","getFactorPrice","factor","unit","sumBy","itm","getInvoiceTotal","factors","Number","result","current","undefined"],"sourceRoot":""}