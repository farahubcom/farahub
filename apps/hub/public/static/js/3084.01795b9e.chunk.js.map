{"version":3,"file":"static/js/3084.01795b9e.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","modules/tickets/pages/NewTicket/Form.js","modules/tickets/pages/NewTicket/Main.js","../node_modules/@mui/icons-material/HeadsetMicOutlined.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system/colorManipulator';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n      slots = {},\n      slotProps = {}\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, otherProps, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, _extends({\n        as: slots.CollapsedIcon,\n        ownerState: ownerState\n      }, slotProps.collapsedIcon))\n    }))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      slots = {},\n      slotProps = {},\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import { Button, Card, CardContent } from \"@mui/material\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useMiddleware } from \"../../../../Application\";\r\nimport TextField from \"../../../../components/TextField\";\r\n\r\n\r\nconst Form = ({ adminWorkspace }) => {\r\n\r\n    const _defaultValues = {\r\n        subject: '',\r\n        priority: 1,\r\n        content: ''\r\n    }\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [formData, setFormData] = useState(_defaultValues);\r\n\r\n    const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const middleware = useMiddleware('tickets.main');\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const response = await middleware.createOrUpdate({\r\n            ...formData,\r\n            messages: [{\r\n                content: formData.content,\r\n                sentAt: new Date(),\r\n                isRespond: false\r\n            }]\r\n        }, adminWorkspace && { headers: { 'Workspace-ID': 'admin' } });\r\n        if (response.ok) {\r\n            enqueueSnackbar('تیکت ارسال شد.');\r\n            setFormData(_defaultValues);\r\n            navigate(\r\n                (adminWorkspace ? '/support/ticket/' : '/ticket/').concat(response.ticket.id),\r\n                { state: { prev: location, ticket: response.ticket } }\r\n            )\r\n        } else {\r\n            const { status, errors } = response;\r\n            if (status === 422) {\r\n                setErrors(errors);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Card variant=\"outlined\">\r\n            <CardContent>\r\n                <TextField\r\n                    InputLabelProps={{ shrink: true }}\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    label=\"موضوع\"\r\n                    sx={{ mb: 2 }}\r\n                    error={errors.subject && true}\r\n                    helperText={errors.subject && errors.subject[0]}\r\n                    name=\"subject\"\r\n                    onChange={handleChange}\r\n                />\r\n                <TextField\r\n                    InputLabelProps={{ shrink: true }}\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    label=\"متن پیام\"\r\n                    multiline\r\n                    rows={5}\r\n                    sx={{ mb: 2 }}\r\n                    name=\"content\"\r\n                    onChange={handleChange}\r\n                />\r\n                <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    onClick={handleSubmit}\r\n                >ارسال تیکت</Button>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Form;","import HeadsetMic from \"@mui/icons-material/HeadsetMicOutlined\";\r\nimport { Box, Breadcrumbs, Grid, Typography } from \"@mui/material\";\r\nimport { TabView } from \"../../../../tabs\";\r\nimport Form from \"./Form\";\r\n\r\n\r\nconst Main = ({ adminWorkspace }) => {\r\n    return (\r\n        <TabView title=\"ثبت تیکت جدید\" Icon={HeadsetMic}>\r\n            <Box sx={{ p: { xs: 1, sm: 2, md: 3 } }}>\r\n                <Grid container justifyContent=\"center\">\r\n                    <Grid item xs={12} md={8}>\r\n                        <Box\r\n                            sx={{\r\n                                mb: 1,\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                alignItems: \"center\"\r\n                            }}\r\n                        >\r\n                            <Box>\r\n                                <Typography variant=\"h5\" sx={{ fontWeight: 600, mb: 1 }}>\r\n                                    ثبت تیکت جدید\r\n                                </Typography>\r\n                                <Breadcrumbs>\r\n                                    <Typography color=\"text.primary\">پشتیبانی</Typography>\r\n                                    <Typography color=\"text.primary\">تیکت‌ها</Typography>\r\n                                    <Typography color=\"text.primary\">ثبت تیکت جدید</Typography>\r\n                                </Breadcrumbs>\r\n                            </Box>\r\n                            {/* <Stack direction=\"row\" spacing={1}>\r\n\r\n                                <Button\r\n                                    className=\"add-new\"\r\n                                    variant=\"transparent\"\r\n                                // startIcon={<AddIcon />}\r\n                                >\r\n                                    تیکت جدید\r\n                                </Button>\r\n                            </Stack> */}\r\n                        </Box>\r\n                        <Form adminWorkspace={adminWorkspace} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </TabView>\r\n    )\r\n}\r\n\r\nexport default Main;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 14v4h-2v-4zM7 14v4H6c-.55 0-1-.45-1-1v-3zm5-13c-4.97 0-9 4.03-9 9v7c0 1.66 1.34 3 3 3h3v-8H5v-2c0-3.87 3.13-7 7-7s7 3.13 7 7v2h-4v8h4v1h-7v2h6c1.66 0 3-1.34 3-3V10c0-4.97-4.03-9-9-9\"\n}), 'HeadsetMicOutlined');"],"names":["createSvgIcon","_jsx","d","_excluded","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","display","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","props","slots","slotProps","otherProps","_objectWithoutPropertiesLoose","ownerState","children","focusRipple","as","CollapsedIcon","collapsedIcon","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","BreadcrumbsRoot","Typography","name","overridesResolver","styles","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","current","index","length","concat","push","React","inProps","ref","useDefaultProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","expanded","setExpanded","classes","composeClasses","useUtilityClasses","collapsedIconSlotProps","useSlotProps","elementType","externalSlotProps","listRef","allItems","toArray","filter","child","map","clsx","slice","BreadcrumbCollapsed","onClick","handleClickExpand","focusable","querySelector","focus","renderItemsBeforeAndAfter","Form","adminWorkspace","_defaultValues","subject","priority","content","navigate","useNavigate","location","useLocation","formData","setFormData","useState","handleChange","e","target","value","errors","setErrors","middleware","useMiddleware","enqueueSnackbar","useSnackbar","Card","variant","_jsxs","CardContent","TextField","InputLabelProps","shrink","fullWidth","label","sx","mb","error","helperText","onChange","multiline","rows","Button","size","async","preventDefault","response","createOrUpdate","messages","sentAt","Date","isRespond","headers","ok","ticket","id","state","prev","status","Main","TabView","title","Icon","HeadsetMic","Box","p","xs","sm","md","Grid","container","justifyContent","item","fontWeight","Breadcrumbs","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx"],"sourceRoot":""}