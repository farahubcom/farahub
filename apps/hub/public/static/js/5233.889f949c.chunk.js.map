{"version":3,"file":"static/js/5233.889f949c.chunk.js","mappings":"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","sources":["../node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","../node_modules/@mui/base/generateUtilityClass/index.js","../node_modules/@mui/base/Unstable_NumberInput/numberInputClasses.js","../node_modules/@mui/base/generateUtilityClasses/index.js","../node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/@mui/utils/esm/useId/useId.js","../node_modules/@mui/base/utils/extractEventHandlers.js","../node_modules/@mui/base/utils/useControllableReducer.js","../node_modules/@mui/base/FormControl/FormControlContext.js","../node_modules/@mui/base/unstable_useNumberInput/numberInputAction.types.js","../node_modules/@mui/utils/esm/clamp/clamp.js","../node_modules/@mui/base/unstable_useNumberInput/utils.js","../node_modules/@mui/base/unstable_useNumberInput/numberInputReducer.js","../node_modules/@mui/base/unstable_useNumberInput/useNumberInput.js","../node_modules/@mui/base/FormControl/useFormControlContext.js","../node_modules/@mui/utils/esm/formatMuiErrorMessage/formatMuiErrorMessage.js","../node_modules/@mui/base/utils/omitEventHandlers.js","../node_modules/@mui/base/utils/useSlotProps.js","../node_modules/@mui/base/utils/resolveComponentProps.js","../node_modules/@mui/base/utils/mergeSlotProps.js","../node_modules/@mui/base/utils/appendOwnerState.js","../node_modules/@mui/base/utils/isHostComponent.js","../node_modules/@mui/base/utils/ClassNameConfigurator.js","../node_modules/@mui/base/Unstable_NumberInput/NumberInput.js","../node_modules/@mui/utils/esm/composeClasses/composeClasses.js","../node_modules/@mui/icons-material/Remove.js"],"sourcesContent":["import ClassNameGenerator from \"../ClassNameGenerator/index.js\";\nexport const globalStateClasses = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  open: 'open',\n  readOnly: 'readOnly',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClasses[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}\nexport function isGlobalState(slot) {\n  return globalStateClasses[slot] !== undefined;\n}","import { globalStateClasses } from '@mui/utils/generateUtilityClass';\nconst GLOBAL_CLASS_PREFIX = 'base';\nfunction buildStateClass(state) {\n  return `${GLOBAL_CLASS_PREFIX}--${state}`;\n}\nfunction buildSlotClass(componentName, slot) {\n  return `${GLOBAL_CLASS_PREFIX}-${componentName}-${slot}`;\n}\nexport function generateUtilityClass(componentName, slot) {\n  const globalStateClass = globalStateClasses[slot];\n  return globalStateClass ? buildStateClass(globalStateClass) : buildSlotClass(componentName, slot);\n}\nexport function isGlobalState(slot) {\n  return globalStateClasses[slot] !== undefined;\n}","import { generateUtilityClass } from '../generateUtilityClass';\nimport { generateUtilityClasses } from '../generateUtilityClasses';\nconst COMPONENT_NAME = 'NumberInput';\nexport function getNumberInputUtilityClass(slot) {\n  return generateUtilityClass(COMPONENT_NAME, slot);\n}\nexport const numberInputClasses = generateUtilityClasses(COMPONENT_NAME, ['root', 'formControl', 'focused', 'disabled', 'readOnly', 'error', 'input', 'incrementButton', 'decrementButton', 'adornedStart', 'adornedEnd']);","import { generateUtilityClass } from '../generateUtilityClass';\nexport function generateUtilityClasses(componentName, slots) {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot);\n  });\n  return result;\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * Merges refs into a single memoized callback ref or `null`.\n *\n * ```tsx\n * const rootRef = React.useRef<Instance>(null);\n * const refFork = useForkRef(rootRef, props.ref);\n *\n * return (\n *   <Root {...props} ref={refFork} />\n * );\n * ```\n *\n * @param {Array<React.Ref<Instance> | undefined>} refs The ref array.\n * @returns {React.RefCallback<Instance> | null} The new ref callback.\n */\nexport default function useForkRef(...refs) {\n  const cleanupRef = React.useRef(undefined);\n  const refEffect = React.useCallback(instance => {\n    const cleanups = refs.map(ref => {\n      if (ref == null) {\n        return null;\n      }\n      if (typeof ref === 'function') {\n        const refCallback = ref;\n        const refCleanup = refCallback(instance);\n        return typeof refCleanup === 'function' ? refCleanup : () => {\n          refCallback(null);\n        };\n      }\n      ref.current = instance;\n      return () => {\n        ref.current = null;\n      };\n    });\n    return () => {\n      cleanups.forEach(refCleanup => refCleanup?.());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return value => {\n      if (cleanupRef.current) {\n        cleanupRef.current();\n        cleanupRef.current = undefined;\n      }\n      if (value != null) {\n        cleanupRef.current = refEffect(value);\n      }\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\n\n// TODO React 17: Remove `useGlobalId` once React 17 support is removed\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseId = safeReact.useId;\n\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  // React.useId() is only available from React 17.0.0.\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride ?? reactId;\n  }\n\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nexport function extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}","'use client';\n\nimport * as React from 'react';\nfunction areEqual(a, b) {\n  return a === b;\n}\nconst EMPTY_OBJECT = {};\nconst NOOP = () => {};\n\n/**\n * Gets the current state augmented with controlled values from the outside.\n * If a state item has a corresponding controlled value, it will be used instead of the internal state.\n */\nfunction getControlledState(internalState, controlledProps) {\n  const augmentedState = {\n    ...internalState\n  };\n  Object.keys(controlledProps).forEach(key => {\n    if (controlledProps[key] !== undefined) {\n      augmentedState[key] = controlledProps[key];\n    }\n  });\n  return augmentedState;\n}\n/**\n * Defines an effect that compares the next state with the previous state and calls\n * the `onStateChange` callback if the state has changed.\n * The comparison is done based on the `stateComparers` parameter.\n */\nfunction useStateChangeDetection(parameters) {\n  const {\n    nextState,\n    initialState,\n    stateComparers,\n    onStateChange,\n    controlledProps,\n    lastActionRef\n  } = parameters;\n  const internalPreviousStateRef = React.useRef(initialState);\n  React.useEffect(() => {\n    if (lastActionRef.current === null) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n    const previousState = getControlledState(internalPreviousStateRef.current, controlledProps);\n    Object.keys(nextState).forEach(key => {\n      // go through all state keys and compare them with the previous state\n      const stateComparer = stateComparers[key] ?? areEqual;\n      const nextStateItem = nextState[key];\n      const previousStateItem = previousState[key];\n      if (previousStateItem == null && nextStateItem != null || previousStateItem != null && nextStateItem == null || previousStateItem != null && nextStateItem != null && !stateComparer(nextStateItem, previousStateItem)) {\n        onStateChange?.(lastActionRef.current.event ?? null, key, nextStateItem, lastActionRef.current.type ?? '', nextState);\n      }\n    });\n    internalPreviousStateRef.current = nextState;\n    lastActionRef.current = null;\n  }, [internalPreviousStateRef, nextState, lastActionRef, onStateChange, stateComparers, controlledProps]);\n}\n\n/**\n * The alternative to `React.useReducer` that lets you control the state from the outside.\n *\n * It can be used in an uncontrolled mode, similar to `React.useReducer`, or in a controlled mode, when the state is controlled by the props.\n * It also supports partially controlled state, when some state items are controlled and some are not.\n *\n * The controlled state items are provided via the `controlledProps` parameter.\n * When a reducer action is dispatched, the internal state is updated with the new values.\n * A change event (`onStateChange`) is then triggered (for each changed state item) if the new state is different from the previous state.\n * This event can be used to update the controlled values.\n *\n * The comparison of the previous and next states is done using the `stateComparers` parameter.\n * If a state item has a corresponding comparer, it will be used to determine if the state has changed.\n * This is useful when the state item is an object and you want to compare only a subset of its properties or if it's an array and you want to compare its contents.\n *\n * An additional feature is the `actionContext` parameter. It allows you to add additional properties to every action object,\n * similarly to how React context is implicitly available to every component.\n *\n * @template State - The type of the state calculated by the reducer.\n * @template Action - The type of the actions that can be dispatched.\n * @template ActionContext - The type of the additional properties that will be added to every action object.\n *\n * @ignore - internal hook.\n */\nexport function useControllableReducer(parameters) {\n  const lastActionRef = React.useRef(null);\n  const {\n    reducer,\n    initialState,\n    controlledProps = EMPTY_OBJECT,\n    stateComparers = EMPTY_OBJECT,\n    onStateChange = NOOP,\n    actionContext,\n    componentName = ''\n  } = parameters;\n  const controlledPropsRef = React.useRef(controlledProps);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      Object.keys(controlledProps).forEach(key => {\n        if (controlledPropsRef.current[key] !== undefined && controlledProps[key] === undefined) {\n          console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : 'A component'} is changing a controlled prop to be uncontrolled: ${key}`);\n        }\n        if (controlledPropsRef.current[key] === undefined && controlledProps[key] !== undefined) {\n          console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : 'A component'} is changing an uncontrolled prop to be controlled: ${key}`);\n        }\n      });\n    }, [controlledProps, componentName]);\n  }\n\n  // The reducer that is passed to React.useReducer is wrapped with a function that augments the state with controlled values.\n  const reducerWithControlledState = React.useCallback((state, action) => {\n    lastActionRef.current = action;\n    const controlledState = getControlledState(state, controlledProps);\n    const newState = reducer(controlledState, action);\n    return newState;\n  }, [controlledProps, reducer]);\n  const [nextState, dispatch] = React.useReducer(reducerWithControlledState, initialState);\n\n  // The action that is passed to dispatch is augmented with the actionContext.\n  const dispatchWithContext = React.useCallback(action => {\n    dispatch({\n      ...action,\n      context: actionContext\n    });\n  }, [actionContext]);\n  useStateChangeDetection({\n    nextState,\n    initialState,\n    stateComparers: stateComparers ?? EMPTY_OBJECT,\n    onStateChange: onStateChange ?? NOOP,\n    controlledProps,\n    lastActionRef\n  });\n  return [getControlledState(nextState, controlledProps), dispatchWithContext];\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport { FormControlContext };","export const NumberInputActionTypes = {\n  clamp: 'numberInput:clamp',\n  inputChange: 'numberInput:inputChange',\n  increment: 'numberInput:increment',\n  decrement: 'numberInput:decrement',\n  decrementToMin: 'numberInput:decrementToMin',\n  incrementToMax: 'numberInput:incrementToMax',\n  resetInputValue: 'numberInput:resetInputValue'\n};","function clamp(val, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER) {\n  return Math.max(min, Math.min(val, max));\n}\nexport default clamp;","import { clamp } from '@mui/utils';\nexport function clampStepwise(val, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER, stepProp = NaN) {\n  if (Number.isNaN(stepProp)) {\n    return clamp(val, min, max);\n  }\n  const step = stepProp || 1;\n  const remainder = val % step;\n  const positivity = Math.sign(remainder);\n  if (Math.abs(remainder) > step / 2) {\n    return clamp(val + positivity * (step - Math.abs(remainder)), min, max);\n  }\n  return clamp(val - positivity * Math.abs(remainder), min, max);\n}\nexport function isNumber(val) {\n  return typeof val === 'number' && !Number.isNaN(val) && Number.isFinite(val);\n}","import { NumberInputActionTypes } from './numberInputAction.types';\nimport { clampStepwise, isNumber } from './utils';\nfunction getClampedValues(rawValue, context) {\n  const {\n    min,\n    max,\n    step\n  } = context;\n  const clampedValue = rawValue === null ? null : clampStepwise(rawValue, min, max, step);\n  const newInputValue = clampedValue === null ? '' : String(clampedValue);\n  return {\n    value: clampedValue,\n    inputValue: newInputValue\n  };\n}\nfunction stepValue(state, context, direction, multiplier) {\n  const {\n    value\n  } = state;\n  const {\n    step = 1,\n    min,\n    max\n  } = context;\n  if (isNumber(value)) {\n    return {\n      up: value + (step ?? 1) * multiplier,\n      down: value - (step ?? 1) * multiplier\n    }[direction];\n  }\n  return {\n    up: min ?? 1,\n    down: max ?? -1\n  }[direction];\n}\nfunction handleClamp(state, context, inputValue) {\n  const {\n    getInputValueAsString\n  } = context;\n  const numberValueAsString = getInputValueAsString(inputValue);\n  const intermediateValue = numberValueAsString === '' || numberValueAsString === '-' ? null : parseInt(numberValueAsString, 10);\n  const clampedValues = getClampedValues(intermediateValue, context);\n  return {\n    ...state,\n    ...clampedValues\n  };\n}\nfunction handleInputChange(state, context, inputValue) {\n  const {\n    getInputValueAsString\n  } = context;\n  const numberValueAsString = getInputValueAsString(inputValue);\n  if (numberValueAsString.match(/^-?\\d+?$/) || numberValueAsString === '' || numberValueAsString === '-') {\n    return {\n      ...state,\n      inputValue: numberValueAsString\n    };\n  }\n  return state;\n}\n\n// use this for ArrowUp, ArrowDown, button clicks\n// use this with applyMultiplier: true for PageUp, PageDown, button shift-clicks\nfunction handleStep(state, context, applyMultiplier, direction) {\n  const multiplier = applyMultiplier ? context.shiftMultiplier : 1;\n  const newValue = stepValue(state, context, direction, multiplier);\n  const clampedValues = getClampedValues(newValue, context);\n  return {\n    ...state,\n    ...clampedValues\n  };\n}\nfunction handleToMinOrMax(state, context, to) {\n  const newValue = context[to];\n  if (!isNumber(newValue)) {\n    return state;\n  }\n  return {\n    ...state,\n    value: newValue,\n    inputValue: String(newValue)\n  };\n}\nexport function numberInputReducer(state, action) {\n  const {\n    type,\n    context\n  } = action;\n  switch (type) {\n    case NumberInputActionTypes.clamp:\n      return handleClamp(state, context, action.inputValue);\n    case NumberInputActionTypes.inputChange:\n      return handleInputChange(state, context, action.inputValue);\n    case NumberInputActionTypes.increment:\n      return handleStep(state, context, action.applyMultiplier, 'up');\n    case NumberInputActionTypes.decrement:\n      return handleStep(state, context, action.applyMultiplier, 'down');\n    case NumberInputActionTypes.incrementToMax:\n      return handleToMinOrMax(state, context, 'max');\n    case NumberInputActionTypes.decrementToMin:\n      return handleToMinOrMax(state, context, 'min');\n    case NumberInputActionTypes.resetInputValue:\n      return {\n        ...state,\n        inputValue: String(state.value)\n      };\n    default:\n      return state;\n  }\n}","'use client';\n\nimport _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useControllableReducer } from '../utils/useControllableReducer';\nimport { useFormControlContext } from '../FormControl';\nimport { NumberInputActionTypes } from './numberInputAction.types';\nimport { numberInputReducer } from './numberInputReducer';\nimport { isNumber } from './utils';\nconst STEP_KEYS = ['ArrowUp', 'ArrowDown', 'PageUp', 'PageDown'];\nconst SUPPORTED_KEYS = [...STEP_KEYS, 'Home', 'End'];\nexport function getInputValueAsString(v) {\n  return v ? String(v.trim()) : String(v);\n}\n\n/**\n *\n * Demos:\n *\n * - [Number Input](https://mui.com/base-ui/react-number-input/#hook)\n *\n * API:\n *\n * - [useNumberInput API](https://mui.com/base-ui/react-number-input/hooks-api/#use-number-input)\n */\nexport function useNumberInput(parameters) {\n  const {\n    min,\n    max,\n    step,\n    shiftMultiplier = 10,\n    defaultValue: defaultValueProp,\n    disabled: disabledProp = false,\n    error: errorProp = false,\n    onBlur,\n    onInputChange,\n    onFocus,\n    onChange,\n    required: requiredProp = false,\n    readOnly: readOnlyProp = false,\n    value: valueProp,\n    inputRef: inputRefProp,\n    inputId: inputIdProp,\n    componentName = 'useNumberInput'\n  } = parameters;\n\n  // TODO: make it work with FormControl\n  const formControlContext = useFormControlContext();\n  const {\n    current: isControlled\n  } = React.useRef(valueProp != null);\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['MUI: You have provided a `slots.input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const inputRef = React.useRef(null);\n  const handleInputRef = useForkRef(inputRef, inputRefProp, handleInputRefWarning);\n  const inputId = useId(inputIdProp);\n  const [focused, setFocused] = React.useState(false);\n  const handleStateChange = React.useCallback((event, field, fieldValue, reason) => {\n    if (field === 'value' && typeof fieldValue !== 'string') {\n      switch (reason) {\n        // only a blur event will dispatch `numberInput:clamp`\n        case 'numberInput:clamp':\n          onChange?.(event, fieldValue);\n          break;\n        case 'numberInput:increment':\n        case 'numberInput:decrement':\n        case 'numberInput:incrementToMax':\n        case 'numberInput:decrementToMin':\n          onChange?.(event, fieldValue);\n          break;\n        default:\n          break;\n      }\n    }\n  }, [onChange]);\n  const numberInputActionContext = React.useMemo(() => {\n    return {\n      min,\n      max,\n      step,\n      shiftMultiplier,\n      getInputValueAsString\n    };\n  }, [min, max, step, shiftMultiplier]);\n  const initialValue = valueProp ?? defaultValueProp ?? null;\n  const initialState = {\n    value: initialValue,\n    inputValue: initialValue ? String(initialValue) : ''\n  };\n  const controlledState = React.useMemo(() => ({\n    value: valueProp\n  }), [valueProp]);\n  const [state, dispatch] = useControllableReducer({\n    reducer: numberInputReducer,\n    controlledProps: controlledState,\n    initialState,\n    onStateChange: handleStateChange,\n    actionContext: React.useMemo(() => numberInputActionContext, [numberInputActionContext]),\n    componentName\n  });\n  const {\n    value,\n    inputValue\n  } = state;\n  React.useEffect(() => {\n    if (!formControlContext && disabledProp && focused) {\n      setFocused(false);\n      onBlur?.();\n    }\n  }, [formControlContext, disabledProp, focused, onBlur]);\n  React.useEffect(() => {\n    if (isControlled && isNumber(value)) {\n      dispatch({\n        type: NumberInputActionTypes.resetInputValue\n      });\n    }\n  }, [value, dispatch, isControlled]);\n  const createHandleFocus = otherHandlers => event => {\n    otherHandlers.onFocus?.(event);\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n    if (formControlContext && formControlContext.onFocus) {\n      formControlContext?.onFocus?.();\n    }\n    setFocused(true);\n  };\n  const createHandleInputChange = otherHandlers => event => {\n    if (!isControlled && event.target === null) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Expected valid input target. Did you use a custom \\`slots.input\\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(17));\n    }\n    formControlContext?.onChange?.(event);\n    otherHandlers.onInputChange?.(event);\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: NumberInputActionTypes.inputChange,\n      event,\n      inputValue: event.currentTarget.value\n    });\n  };\n  const createHandleBlur = otherHandlers => event => {\n    formControlContext?.onBlur();\n    otherHandlers.onBlur?.(event);\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: NumberInputActionTypes.clamp,\n      event,\n      inputValue: event.currentTarget.value\n    });\n    setFocused(false);\n  };\n  const createHandleClick = otherHandlers => event => {\n    otherHandlers.onClick?.(event);\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n  };\n  const handleStep = direction => event => {\n    const applyMultiplier = Boolean(event.shiftKey);\n    const actionType = {\n      up: NumberInputActionTypes.increment,\n      down: NumberInputActionTypes.decrement\n    }[direction];\n    dispatch({\n      type: actionType,\n      event,\n      applyMultiplier\n    });\n  };\n  const createHandleKeyDown = otherHandlers => event => {\n    otherHandlers.onKeyDown?.(event);\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n\n    // this prevents unintended page scrolling\n    if (SUPPORTED_KEYS.includes(event.key)) {\n      event.preventDefault();\n    }\n    switch (event.key) {\n      case 'ArrowUp':\n        dispatch({\n          type: NumberInputActionTypes.increment,\n          event,\n          applyMultiplier: !!event.shiftKey\n        });\n        break;\n      case 'ArrowDown':\n        dispatch({\n          type: NumberInputActionTypes.decrement,\n          event,\n          applyMultiplier: !!event.shiftKey\n        });\n        break;\n      case 'PageUp':\n        dispatch({\n          type: NumberInputActionTypes.increment,\n          event,\n          applyMultiplier: true\n        });\n        break;\n      case 'PageDown':\n        dispatch({\n          type: NumberInputActionTypes.decrement,\n          event,\n          applyMultiplier: true\n        });\n        break;\n      case 'Home':\n        dispatch({\n          type: NumberInputActionTypes.incrementToMax,\n          event\n        });\n        break;\n      case 'End':\n        dispatch({\n          type: NumberInputActionTypes.decrementToMin,\n          event\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  const getRootProps = (externalProps = {}) => {\n    const propsEventHandlers = extractEventHandlers(parameters, [\n    // these are handled by the input slot\n    'onBlur', 'onInputChange', 'onFocus', 'onChange']);\n    const externalEventHandlers = {\n      ...propsEventHandlers,\n      ...extractEventHandlers(externalProps)\n    };\n    return {\n      ...externalProps,\n      ...externalEventHandlers,\n      onClick: createHandleClick(externalEventHandlers)\n    };\n  };\n  const getInputProps = (externalProps = {}) => {\n    const propsEventHandlers = {\n      onBlur,\n      onFocus,\n      // onChange from normal props is the custom onChange so we ignore it here\n      onChange: onInputChange\n    };\n    const externalEventHandlers = {\n      ...propsEventHandlers,\n      ...extractEventHandlers(externalProps, [\n      // onClick is handled by the root slot\n      'onClick'\n      // do not ignore 'onInputChange', we want slotProps.input.onInputChange to enter the DOM and throw\n      ])\n    };\n    const mergedEventHandlers = {\n      ...externalEventHandlers,\n      onFocus: createHandleFocus(externalEventHandlers),\n      // slotProps.onChange is renamed to onInputChange and passed to createHandleInputChange\n      onChange: createHandleInputChange({\n        ...externalEventHandlers,\n        onInputChange: externalEventHandlers.onChange\n      }),\n      onBlur: createHandleBlur(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers)\n    };\n    const displayValue = (focused ? inputValue : value) ?? '';\n\n    // get rid of slotProps.input.onInputChange before returning to prevent it from entering the DOM\n    // if it was passed, it will be in mergedEventHandlers and throw\n    delete externalProps.onInputChange;\n    return {\n      type: 'text',\n      id: inputId,\n      'aria-invalid': errorProp || undefined,\n      defaultValue: undefined,\n      value: displayValue,\n      'aria-valuenow': displayValue,\n      'aria-valuetext': String(displayValue),\n      'aria-valuemin': min,\n      'aria-valuemax': max,\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      spellCheck: 'false',\n      required: requiredProp,\n      readOnly: readOnlyProp,\n      'aria-disabled': disabledProp,\n      disabled: disabledProp,\n      ...externalProps,\n      ref: handleInputRef,\n      ...mergedEventHandlers\n    };\n  };\n  const handleStepperButtonMouseDown = event => {\n    event.preventDefault();\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  const stepperButtonCommonProps = {\n    'aria-controls': inputId,\n    tabIndex: -1\n  };\n  const isIncrementDisabled = disabledProp || (isNumber(value) ? value >= (max ?? Number.MAX_SAFE_INTEGER) : false);\n  const getIncrementButtonProps = (externalProps = {}) => {\n    return {\n      ...externalProps,\n      ...stepperButtonCommonProps,\n      disabled: isIncrementDisabled,\n      'aria-disabled': isIncrementDisabled,\n      onMouseDown: handleStepperButtonMouseDown,\n      onClick: handleStep('up')\n    };\n  };\n  const isDecrementDisabled = disabledProp || (isNumber(value) ? value <= (min ?? Number.MIN_SAFE_INTEGER) : false);\n  const getDecrementButtonProps = (externalProps = {}) => {\n    return {\n      ...externalProps,\n      ...stepperButtonCommonProps,\n      disabled: isDecrementDisabled,\n      'aria-disabled': isDecrementDisabled,\n      onMouseDown: handleStepperButtonMouseDown,\n      onClick: handleStep('down')\n    };\n  };\n  return {\n    disabled: disabledProp,\n    error: errorProp,\n    focused,\n    formControlContext,\n    getInputProps,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getRootProps,\n    required: requiredProp,\n    value,\n    inputValue,\n    isIncrementDisabled,\n    isDecrementDisabled\n  };\n}","'use client';\n\nimport * as React from 'react';\nimport { FormControlContext } from './FormControlContext';\n/**\n *\n * Demos:\n *\n * - [Form Control](https://mui.com/base-ui/react-form-control/#hook)\n *\n * API:\n *\n * - [useFormControlContext API](https://mui.com/base-ui/react-form-control/hooks-api/#use-form-control-context)\n */\nexport function useFormControlContext() {\n  return React.useContext(FormControlContext);\n}","/**\n * WARNING: Don't import this directly. It's imported by the code generated by\n * `@mui/interal-babel-plugin-minify-errors`. Make sure to always use string literals in `Error`\n * constructors to ensure the plugin works as expected. Supported patterns include:\n *   throw new Error('My message');\n *   throw new Error(`My message: ${foo}`);\n *   throw new Error(`My message: ${foo}` + 'another string');\n *   ...\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code, ...args) {\n  const url = new URL(`https://mui.com/production-error/?code=${code}`);\n  args.forEach(arg => url.searchParams.append('args[]', arg));\n  return `Minified MUI error #${code}; visit ${url} for the full message.`;\n}","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nexport function omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}","'use client';\n\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { appendOwnerState } from './appendOwnerState';\nimport { mergeSlotProps } from './mergeSlotProps';\nimport { resolveComponentProps } from './resolveComponentProps';\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nexport function useSlotProps(parameters) {\n  const {\n    elementType,\n    externalSlotProps,\n    ownerState,\n    skipResolvingSlotProps = false,\n    ...rest\n  } = parameters;\n  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps({\n    ...rest,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.additionalProps?.ref);\n  const props = appendOwnerState(elementType, {\n    ...mergedProps,\n    ref\n  }, ownerState);\n  return props;\n}","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nexport function resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}","import clsx from 'clsx';\nimport { extractEventHandlers } from './extractEventHandlers';\nimport { omitEventHandlers } from './omitEventHandlers';\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nexport function mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n    const mergedStyle = {\n      ...additionalProps?.style,\n      ...externalForwardedProps?.style,\n      ...externalSlotProps?.style\n    };\n    const props = {\n      ...additionalProps,\n      ...externalForwardedProps,\n      ...externalSlotProps\n    };\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers({\n    ...externalForwardedProps,\n    ...externalSlotProps\n  });\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n  const mergedStyle = {\n    ...internalSlotProps?.style,\n    ...additionalProps?.style,\n    ...externalForwardedProps?.style,\n    ...externalSlotProps?.style\n  };\n  const props = {\n    ...internalSlotProps,\n    ...additionalProps,\n    ...otherPropsWithoutEventHandlers,\n    ...componentsPropsWithoutEventHandlers\n  };\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}","import { isHostComponent } from './isHostComponent';\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nexport function appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return {\n    ...otherProps,\n    ownerState: {\n      ...otherProps.ownerState,\n      ...ownerState\n    }\n  };\n}","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nexport function isHostComponent(element) {\n  return typeof element === 'string';\n}","'use client';\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultContextValue = {\n  disableDefaultClasses: false\n};\nconst ClassNameConfiguratorContext = /*#__PURE__*/React.createContext(defaultContextValue);\nif (process.env.NODE_ENV !== 'production') {\n  ClassNameConfiguratorContext.displayName = 'ClassNameConfiguratorContext';\n}\n/**\n * @ignore - internal hook.\n *\n * Wraps the `generateUtilityClass` function and controls how the classes are generated.\n * Currently it only affects whether the classes are applied or not.\n *\n * @returns Function to be called with the `generateUtilityClass` function specific to a component to generate the classes.\n */\nexport function useClassNamesOverride(generateUtilityClass) {\n  const {\n    disableDefaultClasses\n  } = React.useContext(ClassNameConfiguratorContext);\n  return slot => {\n    if (disableDefaultClasses) {\n      return '';\n    }\n    return generateUtilityClass(slot);\n  };\n}\n\n/**\n * Allows to configure the components within to not apply any built-in classes.\n */\nexport function ClassNameConfigurator(props) {\n  const {\n    disableDefaultClasses,\n    children\n  } = props;\n  const contextValue = React.useMemo(() => ({\n    disableDefaultClasses: disableDefaultClasses ?? false\n  }), [disableDefaultClasses]);\n  return /*#__PURE__*/_jsx(ClassNameConfiguratorContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getNumberInputUtilityClass } from './numberInputClasses';\nimport { unstable_useNumberInput as useNumberInput } from '../unstable_useNumberInput';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    error,\n    focused,\n    readOnly,\n    formControlContext,\n    isIncrementDisabled,\n    isDecrementDisabled,\n    startAdornment,\n    endAdornment\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', focused && 'focused', readOnly && 'readOnly', Boolean(formControlContext) && 'formControl', Boolean(startAdornment) && 'adornedStart', Boolean(endAdornment) && 'adornedEnd'],\n    input: ['input', disabled && 'disabled', readOnly && 'readOnly'],\n    incrementButton: ['incrementButton', isIncrementDisabled && 'disabled'],\n    decrementButton: ['decrementButton', isDecrementDisabled && 'disabled']\n  };\n  return composeClasses(slots, useClassNamesOverride(getNumberInputUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Number Input](https://mui.com/base-ui/react-number-input/)\n *\n * API:\n *\n * - [NumberInput API](https://mui.com/base-ui/react-number-input/components-api/#number-input)\n */\nconst NumberInput = /*#__PURE__*/React.forwardRef(function NumberInput(props, forwardedRef) {\n  const {\n    className,\n    defaultValue,\n    disabled,\n    endAdornment,\n    error,\n    id,\n    max,\n    min,\n    onBlur,\n    onInputChange,\n    onFocus,\n    onChange,\n    placeholder,\n    required,\n    readOnly = false,\n    shiftMultiplier,\n    startAdornment,\n    step,\n    value,\n    slotProps = {},\n    slots = {},\n    ...rest\n  } = props;\n  const {\n    getRootProps,\n    getInputProps,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    focused,\n    error: errorState,\n    disabled: disabledState,\n    formControlContext,\n    isIncrementDisabled,\n    isDecrementDisabled\n  } = useNumberInput({\n    min,\n    max,\n    step,\n    shiftMultiplier,\n    defaultValue,\n    disabled,\n    error,\n    onFocus,\n    onInputChange,\n    onBlur,\n    onChange,\n    required,\n    readOnly,\n    value,\n    inputId: id,\n    componentName: 'NumberInput'\n  });\n  const ownerState = {\n    ...props,\n    disabled: disabledState,\n    error: errorState,\n    focused,\n    readOnly,\n    formControlContext,\n    isIncrementDisabled,\n    isDecrementDisabled\n  };\n  const classes = useUtilityClasses(ownerState);\n  const propsForwardedToInputSlot = {\n    placeholder\n  };\n  const Root = slots.root ?? 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: rest,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: [classes.root, className]\n  });\n  const Input = slots.input ?? 'input';\n  const inputProps = useSlotProps({\n    elementType: Input,\n    getSlotProps: otherHandlers => getInputProps({\n      ...propsForwardedToInputSlot,\n      ...otherHandlers\n    }),\n    externalSlotProps: slotProps.input,\n    ownerState,\n    className: classes.input\n  });\n  const IncrementButton = slots.incrementButton ?? 'button';\n  const incrementButtonProps = useSlotProps({\n    elementType: IncrementButton,\n    getSlotProps: getIncrementButtonProps,\n    externalSlotProps: slotProps.incrementButton,\n    ownerState,\n    className: classes.incrementButton\n  });\n  const DecrementButton = slots.decrementButton ?? 'button';\n  const decrementButtonProps = useSlotProps({\n    elementType: DecrementButton,\n    getSlotProps: getDecrementButtonProps,\n    externalSlotProps: slotProps.decrementButton,\n    ownerState,\n    className: classes.decrementButton\n  });\n  return /*#__PURE__*/_jsxs(Root, {\n    ...rootProps,\n    children: [/*#__PURE__*/_jsx(DecrementButton, {\n      ...decrementButtonProps\n    }), /*#__PURE__*/_jsx(IncrementButton, {\n      ...incrementButtonProps\n    }), startAdornment, /*#__PURE__*/_jsx(Input, {\n      ...inputProps\n    }), endAdornment]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? NumberInput.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.number,\n  /**\n   * If `true`, the component is disabled.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Trailing adornment for this input.\n   */\n  endAdornment: PropTypes.node,\n  /**\n   * If `true`, the `input` will indicate an error by setting the `aria-invalid` attribute on the input and the `baseui--error` class on the root element.\n   */\n  error: PropTypes.bool,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * The maximum value.\n   */\n  max: PropTypes.number,\n  /**\n   * The minimum value.\n   */\n  min: PropTypes.number,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired after the value is clamped and changes - when the `input` is blurred or when\n   * the stepper buttons are triggered.\n   * Called with `undefined` when the value is unset.\n   *\n   * @param {React.FocusEvent<HTMLInputElement>|React.PointerEvent|React.KeyboardEvent} event The event source of the callback\n   * @param {number|undefined} value The new value of the component\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback fired when the `input` value changes after each keypress, before clamping is applied.\n   * Note that `event.target.value` may contain values that fall outside of `min` and `max` or\n   * are otherwise \"invalid\".\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the `input` element becomes read-only. The stepper buttons remain active,\n   * with the addition that they are now keyboard focusable.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  required: PropTypes.bool,\n  /**\n   * Multiplier applied to `step` if the shift key is held while incrementing\n   * or decrementing the value. Defaults to `10`.\n   */\n  shiftMultiplier: PropTypes.number,\n  /**\n   * The props used for each slot inside the NumberInput.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    decrementButton: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    incrementButton: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the InputBase.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    decrementButton: PropTypes.elementType,\n    incrementButton: PropTypes.elementType,\n    input: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * Leading adornment for this input.\n   */\n  startAdornment: PropTypes.node,\n  /**\n   * The amount that the value changes on each increment or decrement.\n   */\n  step: PropTypes.number,\n  /**\n   * The current value. Use when the component is controlled.\n   * @default null\n   */\n  value: PropTypes.number\n} : void 0;\nexport { NumberInput };","/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0\n   ---\n   These rules are preventing the performance optimizations below.\n */\n\n/**\n * Compose classes from multiple sources.\n *\n * @example\n * ```tsx\n * const slots = {\n *  root: ['root', 'primary'],\n *  label: ['label'],\n * };\n *\n * const getUtilityClass = (slot) => `MuiButton-${slot}`;\n *\n * const classes = {\n *   root: 'my-root-class',\n * };\n *\n * const output = composeClasses(slots, getUtilityClass, classes);\n * // {\n * //   root: 'MuiButton-root MuiButton-primary my-root-class',\n * //   label: 'MuiButton-label',\n * // }\n * ```\n *\n * @param slots a list of classes for each possible slot\n * @param getUtilityClass a function to resolve the class based on the slot name\n * @param classes the input classes from props\n * @returns the resolved classes for all slots\n */\nexport default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  for (const slotName in slots) {\n    const slot = slots[slotName];\n    let buffer = '';\n    let start = true;\n    for (let i = 0; i < slot.length; i += 1) {\n      const value = slot[i];\n      if (value) {\n        buffer += (start === true ? '' : ' ') + getUtilityClass(value);\n        start = false;\n        if (classes && classes[value]) {\n          buffer += ' ' + classes[value];\n        }\n      }\n    }\n    output[slotName] = buffer;\n  }\n  return output;\n}","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5v-2h14z\"\n}), 'Remove');"],"names":["globalStateClasses","active","checked","completed","disabled","error","expanded","focused","focusVisible","open","readOnly","required","selected","GLOBAL_CLASS_PREFIX","generateUtilityClass","componentName","slot","globalStateClass","buildSlotClass","COMPONENT_NAME","getNumberInputUtilityClass","slots","result","forEach","generateUtilityClasses","useForkRef","refs","cleanupRef","React","undefined","refEffect","instance","cleanups","map","ref","refCallback","refCleanup","current","every","value","globalId","maybeReactUseId","useId","idOverride","reactId","defaultId","setDefaultId","id","useGlobalId","extractEventHandlers","object","excludeKeys","Object","keys","filter","prop","match","includes","areEqual","a","b","EMPTY_OBJECT","NOOP","getControlledState","internalState","controlledProps","augmentedState","key","useControllableReducer","parameters","lastActionRef","reducer","initialState","stateComparers","onStateChange","actionContext","reducerWithControlledState","state","action","controlledState","nextState","dispatch","dispatchWithContext","context","internalPreviousStateRef","previousState","stateComparer","nextStateItem","previousStateItem","event","type","useStateChangeDetection","FormControlContext","NumberInputActionTypes","val","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","Math","isNumber","isNaN","isFinite","getClampedValues","rawValue","step","clampedValue","stepProp","NaN","clamp","remainder","positivity","sign","abs","clampStepwise","inputValue","String","handleStep","applyMultiplier","direction","newValue","multiplier","up","down","stepValue","shiftMultiplier","clampedValues","handleToMinOrMax","to","numberInputReducer","getInputValueAsString","numberValueAsString","parseInt","handleClamp","handleInputChange","SUPPORTED_KEYS","v","trim","useNumberInput","defaultValue","defaultValueProp","disabledProp","errorProp","onBlur","onInputChange","onFocus","onChange","requiredProp","readOnlyProp","valueProp","inputRef","inputRefProp","inputId","inputIdProp","formControlContext","isControlled","handleInputRefWarning","process","handleInputRef","setFocused","handleStateChange","field","fieldValue","reason","numberInputActionContext","initialValue","createHandleInputChange","otherHandlers","target","Error","code","args","url","URL","arg","searchParams","append","_formatMuiErrorMessage","defaultMuiPrevented","defaultPrevented","currentTarget","createHandleBlur","Boolean","shiftKey","createHandleKeyDown","onKeyDown","preventDefault","handleStepperButtonMouseDown","focus","stepperButtonCommonProps","tabIndex","isIncrementDisabled","isDecrementDisabled","getInputProps","externalProps","externalEventHandlers","mergedEventHandlers","displayValue","autoComplete","autoCorrect","spellCheck","getIncrementButtonProps","onMouseDown","onClick","getDecrementButtonProps","getRootProps","omitEventHandlers","useSlotProps","elementType","externalSlotProps","ownerState","skipResolvingSlotProps","rest","resolvedComponentsProps","componentProps","slotState","resolveComponentProps","props","mergedProps","internalRef","getSlotProps","additionalProps","externalForwardedProps","className","joinedClasses","clsx","mergedStyle","style","length","eventHandlers","componentsPropsWithoutEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","mergeSlotProps","otherProps","appendOwnerState","defaultContextValue","disableDefaultClasses","ClassNameConfiguratorContext","useUtilityClasses","startAdornment","endAdornment","getUtilityClass","classes","output","slotName","buffer","start","i","composeClasses","root","input","incrementButton","decrementButton","useClassNamesOverride","NumberInput","forwardedRef","placeholder","slotProps","errorState","disabledState","propsForwardedToInputSlot","Root","rootProps","Input","inputProps","IncrementButton","incrementButtonProps","DecrementButton","decrementButtonProps","_jsxs","children","_jsx","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}