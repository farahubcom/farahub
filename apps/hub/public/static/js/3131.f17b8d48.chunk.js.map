{"version":3,"file":"static/js/3131.f17b8d48.chunk.js","mappings":"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","sources":["modules/tickets/pages/NewTicket/Form.js","modules/tickets/pages/NewTicket/Main.js","../node_modules/@mui/icons-material/HeadsetMicOutlined.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js"],"sourcesContent":["import { Button, Card, CardContent } from \"@mui/material\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useMiddleware } from \"../../../../Application\";\r\nimport TextField from \"../../../../components/TextField\";\r\n\r\n\r\nconst Form = ({ adminWorkspace }) => {\r\n\r\n    const _defaultValues = {\r\n        subject: '',\r\n        priority: 1,\r\n        content: ''\r\n    }\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [formData, setFormData] = useState(_defaultValues);\r\n\r\n    const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const middleware = useMiddleware('tickets.main');\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const response = await middleware.createOrUpdate({\r\n            ...formData,\r\n            messages: [{\r\n                content: formData.content,\r\n                sentAt: new Date(),\r\n                isRespond: false\r\n            }]\r\n        }, adminWorkspace && { headers: { 'Workspace-ID': 'admin' } });\r\n        if (response.ok) {\r\n            enqueueSnackbar('تیکت ارسال شد.');\r\n            setFormData(_defaultValues);\r\n            navigate(\r\n                (adminWorkspace ? '/support/ticket/' : '/ticket/').concat(response.ticket.id),\r\n                { state: { prev: location, ticket: response.ticket } }\r\n            )\r\n        } else {\r\n            const { status, errors } = response;\r\n            if (status === 422) {\r\n                setErrors(errors);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Card variant=\"outlined\">\r\n            <CardContent>\r\n                <TextField\r\n                    InputLabelProps={{ shrink: true }}\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    label=\"موضوع\"\r\n                    sx={{ mb: 2 }}\r\n                    error={errors.subject && true}\r\n                    helperText={errors.subject && errors.subject[0]}\r\n                    name=\"subject\"\r\n                    onChange={handleChange}\r\n                />\r\n                <TextField\r\n                    InputLabelProps={{ shrink: true }}\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    label=\"متن پیام\"\r\n                    multiline\r\n                    rows={5}\r\n                    sx={{ mb: 2 }}\r\n                    name=\"content\"\r\n                    onChange={handleChange}\r\n                />\r\n                <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    onClick={handleSubmit}\r\n                >ارسال تیکت</Button>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Form;","import HeadsetMic from \"@mui/icons-material/HeadsetMicOutlined\";\r\nimport { Box, Breadcrumbs, Grid, Typography } from \"@mui/material\";\r\nimport { TabView } from \"../../../../tabs\";\r\nimport Form from \"./Form\";\r\n\r\n\r\nconst Main = ({ adminWorkspace }) => {\r\n    return (\r\n        <TabView title=\"ثبت تیکت جدید\" Icon={HeadsetMic}>\r\n            <Box sx={{ p: { xs: 1, sm: 2, md: 3 } }}>\r\n                <Grid container justifyContent=\"center\">\r\n                    <Grid item xs={12} md={8}>\r\n                        <Box\r\n                            sx={{\r\n                                mb: 1,\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                alignItems: \"center\"\r\n                            }}\r\n                        >\r\n                            <Box>\r\n                                <Typography variant=\"h5\" sx={{ fontWeight: 600, mb: 1 }}>\r\n                                    ثبت تیکت جدید\r\n                                </Typography>\r\n                                <Breadcrumbs>\r\n                                    <Typography color=\"text.primary\">پشتیبانی</Typography>\r\n                                    <Typography color=\"text.primary\">تیکت‌ها</Typography>\r\n                                    <Typography color=\"text.primary\">ثبت تیکت جدید</Typography>\r\n                                </Breadcrumbs>\r\n                            </Box>\r\n                            {/* <Stack direction=\"row\" spacing={1}>\r\n\r\n                                <Button\r\n                                    className=\"add-new\"\r\n                                    variant=\"transparent\"\r\n                                // startIcon={<AddIcon />}\r\n                                >\r\n                                    تیکت جدید\r\n                                </Button>\r\n                            </Stack> */}\r\n                        </Box>\r\n                        <Form adminWorkspace={adminWorkspace} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </TabView>\r\n    )\r\n}\r\n\r\nexport default Main;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 14v4h-2v-4h2M7 14v4H6c-.55 0-1-.45-1-1v-3h2m5-13c-4.97 0-9 4.03-9 9v7c0 1.66 1.34 3 3 3h3v-8H5v-2c0-3.87 3.13-7 7-7s7 3.13 7 7v2h-4v8h4v1h-7v2h6c1.66 0 3-1.34 3-3V10c0-4.97-4.03-9-9-9z\"\n}), 'HeadsetMicOutlined');\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n      slots = {},\n      slotProps = {}\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, otherProps, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, _extends({\n        as: slots.CollapsedIcon,\n        ownerState: ownerState\n      }, slotProps.collapsedIcon))\n    }))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      slots = {},\n      slotProps = {},\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;"],"names":["Form","adminWorkspace","_defaultValues","subject","priority","content","navigate","useNavigate","location","useLocation","formData","setFormData","useState","handleChange","e","target","name","value","errors","setErrors","middleware","useMiddleware","enqueueSnackbar","useSnackbar","_jsx","Card","variant","children","_jsxs","CardContent","TextField","InputLabelProps","shrink","fullWidth","label","sx","mb","error","helperText","onChange","multiline","rows","Button","size","onClick","async","preventDefault","response","createOrUpdate","messages","sentAt","Date","isRespond","headers","ok","concat","ticket","id","state","prev","status","Main","TabView","title","Icon","HeadsetMic","Box","p","xs","sm","md","Grid","container","justifyContent","item","display","alignItems","Typography","fontWeight","Breadcrumbs","color","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","_excluded","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","props","slots","slotProps","otherProps","_objectWithoutPropertiesLoose","ownerState","focusRipple","as","CollapsedIcon","collapsedIcon","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","BreadcrumbsRoot","overridesResolver","styles","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","current","index","length","push","React","inProps","ref","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","expanded","setExpanded","classes","composeClasses","useUtilityClasses","collapsedIconSlotProps","useSlotProps","elementType","externalSlotProps","listRef","allItems","filter","child","map","clsx","slice","BreadcrumbCollapsed","handleClickExpand","focusable","querySelector","focus","renderItemsBeforeAndAfter"],"sourceRoot":""}