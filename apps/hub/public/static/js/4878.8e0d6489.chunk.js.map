{"version":3,"file":"static/js/4878.8e0d6489.chunk.js","mappings":"mTAiBA,MAAMA,EAAgBA,EAAGC,WAAUC,QAAOC,WAAUC,QAAOC,eAEzDC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,QAAQ,WAAWC,GAAI,CAAEC,MAAO,QAASC,UAC9CL,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACH,GAAI,CAAEI,UAAW,SAAUC,EAAIC,GAAUA,EAAMC,QAAQ,IAAKL,UAChEM,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACLC,cAAc,MACdC,IAAML,GAAUA,EAAMC,QAAQ,GAC9BK,WAAW,SAAQV,SAAA,EAEnBL,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CACPb,GAAI,CAAEc,SAAU,QAChBC,UAAWC,EAAAA,GACXC,KAAMzB,KAEPgB,EAAAA,EAAAA,MAACL,EAAAA,EAAG,CAACe,SAAU,EAAGd,UAAU,QAAOF,SAAA,EAClCL,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACpB,QAAQ,KAAKqB,WAAW,OAAMlB,SACxCT,KAEFI,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACpB,QAAQ,YAAWG,SAAER,OAEjCC,IACAE,EAAAA,EAAAA,KAACwB,EAAAA,EAAO,CAAC5B,MAAOE,EAAO2B,UAAU,MAAKpB,UACrCL,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CACPb,GAAI,CAAEc,SAAU,UAChBC,UAAWC,EAAAA,GACXC,KAAK,0CA4Eb,EAlEkBM,KAAO,IAADC,EAAAC,EAAAC,EAEvB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAAC,GAE5BC,GAAaC,EAAAA,EAAAA,IAAc,wBASjCC,EAAAA,EAAAA,YAAU,KALSC,WAClB,MAAMC,QAAiBJ,EAAWK,sBAClCP,EAAQM,EAASP,KAAK,EAItBS,EAAY,GACV,IAEH,MAAMC,GAAOC,EAAAA,EAAAA,IAAQ,4BAEfC,EAAQ,CACb,CACC9C,MAA2B,QAAtB+B,EAAEG,EAAKa,uBAAe,IAAAhB,EAAAA,EAAI,IAC/B9B,SAAU,4EACVF,SAAU,6CACVG,MAAO,yLAER,CACCF,MAAqC,QAAhCgC,EAAEE,EAAKc,iCAAyB,IAAAhB,EAAAA,EAAI,IACzC/B,SAAU,wHACVF,SAAU,wCACVG,MAAO,ySAER,CACCF,MAAyC,QAApCiC,EAAEC,EAAKe,qCAA6B,IAAAhB,EAAAA,EAAI,IAC7ChC,SAAU,oIACVF,SAAU,2CACVG,MAAO,wPAIT,OACCE,EAAAA,EAAAA,KAAC8C,EAAAA,GAAO,IAAKN,EAAInC,UAChBL,EAAAA,EAAAA,KAAC+C,EAAAA,EAAmB,CAAA1C,UACnBL,EAAAA,EAAAA,KAACgD,EAAAA,EAAS,CAACC,gBAAc,EAAA5C,UACxBL,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACJC,QAAQ,WACRC,GAAI,CAAEkB,SAAU,EAAGb,EAAIC,GAAUA,EAAMC,QAAQ,IAAKL,UAEpDL,EAAAA,EAAAA,KAACkD,EAAAA,EAAW,CAAA7C,UACXL,EAAAA,EAAAA,KAACmD,EAAAA,GAAI,CAACC,WAAS,EAAC1C,QAAS,EAAEL,SACzBqC,EAAMW,KAAI,CAACC,EAAMC,KACjBvD,EAAAA,EAAAA,KAACmD,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAErD,UACxBL,EAAAA,EAAAA,KAACN,EAAa,IAAK4D,KADWC,gBAW5B,C","sources":["modules/customers-club/pages/Dashboard/Main.js"],"sourcesContent":["import {\r\n\tBox,\r\n\tCard,\r\n\tCardContent,\r\n\tContainer,\r\n\tGrid,\r\n\tStack,\r\n\tSvgIcon,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport { useMiddleware, useTask } from \"../../../../Application\";\r\nimport ResponsiveContainer from \"../../../../components/ResponsiveContainer\";\r\nimport { TabView } from \"../../../../tabs\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport Tooltip from \"../../../../components/Tooltip\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst StatisticCard = ({ iconName, title, subtitle, guide, progress }) => {\r\n\treturn (\r\n\t\t<Card variant=\"outlined\" sx={{ width: \"100%\" }}>\r\n\t\t\t<Box sx={{ textAlign: \"center\", p: (theme) => theme.spacing(2) }}>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\t\tgap={(theme) => theme.spacing(3)}\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<SvgIcon\r\n\t\t\t\t\t\tsx={{ fontSize: \"4rem\" }}\r\n\t\t\t\t\t\tcomponent={Icon}\r\n\t\t\t\t\t\ticon={iconName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Box flexGrow={1} textAlign=\"start\">\r\n\t\t\t\t\t\t<Typography variant=\"h4\" fontWeight=\"bold\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"subtitle2\">{subtitle}</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{guide && (\r\n\t\t\t\t\t\t<Tooltip title={guide} placement=\"top\">\r\n\t\t\t\t\t\t\t<SvgIcon\r\n\t\t\t\t\t\t\t\tsx={{ fontSize: \"1.5rem\" }}\r\n\t\t\t\t\t\t\t\tcomponent={Icon}\r\n\t\t\t\t\t\t\t\ticon=\"solar:question-square-linear\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Stack>\r\n\t\t\t</Box>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nconst Dashboard = () => {\r\n\r\n\tconst [data, setData] = useState({});\r\n\r\n\tconst middleware = useMiddleware(\"Customers-Club.Main\");\r\n\r\n\t// const injectedHooks = Object.assign({}, ...(inject('Documentations', 'BooksList.Hooks') || []));\r\n\r\n\tconst getOptions = async () => {\r\n\t\tconst response = await middleware.getDashboardOptions();\r\n\t\tsetData(response.data);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetOptions();\r\n\t}, []);\r\n\r\n\tconst task = useTask(\"Customers-Club.dashboard\");\r\n\r\n\tconst stats = [\r\n\t\t{\r\n\t\t\ttitle: data.total_customers ?? '-',\r\n\t\t\tsubtitle: \"تعداد مشتریان\",\r\n\t\t\ticonName: \"solar:users-group-two-rounded-bold-duotone\",\r\n\t\t\tguide: \"تعداد مشتریان و درصد رشد در ماه اخیر\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: data.total_revisited_customers ?? '-',\r\n\t\t\tsubtitle: \"مشتریان با مراجعه مجدد\",\r\n\t\t\ticonName: \"solar:user-heart-rounded-bold-duotone\",\r\n\t\t\tguide: \"تعداد مشتریانی که دوباره مراجعه کرده اند و رشد در ماه اخیر\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: data.total_customers_with_birthday ?? '-',\r\n\t\t\tsubtitle: \"مشتریان دارای تاریخ تولد\",\r\n\t\t\ticonName: \"solar:confetti-minimalistic-bold-duotone\",\r\n\t\t\tguide: \"تعداد مشتریان دارای تاریخ تولد و رشد در ماه اخیر\",\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<TabView {...task}>\r\n\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<Container disableGutters>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ flexGrow: 1, p: (theme) => theme.spacing(3) }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t\t\t\t{stats.map((stat, index) => (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={4} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<StatisticCard {...stat} />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Container>\r\n\r\n\t\t\t\t{/* {inject('Documentations', 'BooksList.Footer', { data, loading, reload, ...injectedHooks })} */}\r\n\t\t\t</ResponsiveContainer>\r\n\t\t</TabView>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["StatisticCard","iconName","title","subtitle","guide","progress","_jsx","Card","variant","sx","width","children","Box","textAlign","p","theme","spacing","_jsxs","Stack","flexDirection","gap","alignItems","SvgIcon","fontSize","component","Icon","icon","flexGrow","Typography","fontWeight","Tooltip","placement","Dashboard","_data$total_customers","_data$total_revisited","_data$total_customers2","data","setData","useState","middleware","useMiddleware","useEffect","async","response","getDashboardOptions","getOptions","task","useTask","stats","total_customers","total_revisited_customers","total_customers_with_birthday","TabView","ResponsiveContainer","Container","disableGutters","CardContent","Grid","container","map","stat","index","item","xs","md"],"sourceRoot":""}