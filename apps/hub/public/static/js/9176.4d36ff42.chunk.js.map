{"version":3,"file":"static/js/9176.4d36ff42.chunk.js","mappings":"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","sources":["components/ResponsiveTabBar.js","modules/tasks/pages/Boards/Main.js","../node_modules/@mui/icons-material/DashboardOutlined.js","../node_modules/@mui/icons-material/GridViewOutlined.js"],"sourcesContent":["import CloseIcon from \"@mui/icons-material/CloseOutlined\";\r\nimport MenuIcon from \"@mui/icons-material/MenuOutlined\";\r\nimport { Box, DialogTitle, Divider, Grid, IconButton, List, ListItem, ListItemButton, ListItemIcon, ListItemText, Tab, Tabs, alpha, styled, useMediaQuery, useTheme } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Sticky from 'react-stickynode';\r\nimport useLocationHash from \"../utils/useLocationHash\";\r\nimport BottomSheet from \"./BottomSheet\";\r\nimport useHideOnScroll from \"../utils/useHideOnScroll\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst TabsContainer = styled(Box)(({ theme }) => ({\r\n    display: 'flex',\r\n    background: '#fff',\r\n}))\r\n\r\nconst StyledTabs = styled((props) => (\r\n    <Tabs\r\n        {...props}\r\n        TabIndicatorProps={{ children: <span className=\"MuiTabs-indicatorSpan\" /> }}\r\n    />\r\n))(({ theme }) => ({\r\n    //\r\n}));\r\n\r\nconst StyledTab = styled((props) => <Tab disableRipple {...props} />, {\r\n    shouldForwardProp: prop => prop !== 'isUnderTabBar'\r\n})(\r\n    ({ theme, isUnderTabBar }) => ({\r\n        transition: theme.transitions.create('all'),\r\n        borderTopLeftRadius: !isUnderTabBar && theme.shape.borderRadius * 3,\r\n        borderTopRightRadius: !isUnderTabBar && theme.shape.borderRadius * 3,\r\n        '&.Mui-selected': {\r\n            backgroundColor: alpha(theme.palette.primary.main, 0.1)\r\n        },\r\n    }));\r\n\r\n\r\nconst TabList = ({ tabs, value }) => {\r\n    return (\r\n        <List>\r\n            {tabs.map((tab, index) => (\r\n                <ListItem disablePadding divider key={index}>\r\n                    <ListItemButton onClick={tab.onClick} selected={value === tab.value}>\r\n                        <ListItemIcon>\r\n                            {tab.icon}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={tab.label} />\r\n                    </ListItemButton>\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\n\r\n\r\nconst ResponsiveTabBar = ({\r\n    tabs,\r\n    children,\r\n    value\r\n}) => {\r\n\r\n    const theme = useTheme()\r\n    const isResponsive = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const navigate = useNavigate();\r\n    const segmentName = 'more';\r\n    const { hasSegment, addSegment, removeSegment } = useLocationHash();\r\n\r\n    const [isSticky, setIsSticky] = useState(false);\r\n    const isTabBarHidden = useHideOnScroll();\r\n\r\n    const handleStateChange = status => setIsSticky(status.status === Sticky.STATUS_FIXED);\r\n    const isNavStickedUnderTabBar = () => !isTabBarHidden && isSticky;\r\n\r\n\r\n    return (\r\n        <Box>\r\n            {!(!isResponsive && tabs.length > 10) && (\r\n                <Sticky\r\n                    top={isTabBarHidden ? 48 : 48 * 2}\r\n                    innerZ={1200}\r\n                    onStateChange={handleStateChange}\r\n                >\r\n                    <>\r\n                        <TabsContainer>\r\n                            <StyledTabs\r\n                                variant=\"scrollable\"\r\n                                scrollButtons=\"auto\"\r\n                                // allowScrollButtonsMobile\r\n                                value={value}\r\n                                sx={{ flexGrow: 1, minHeight: 'unset' }}\r\n                            >\r\n                                {tabs.slice(0, isResponsive ? 5 : 10).map((tab, index) => (\r\n                                    <StyledTab\r\n                                        isUnderTabBar={isNavStickedUnderTabBar()}\r\n                                        iconPosition=\"start\"\r\n                                        sx={{ minHeight: 'unset' }}\r\n                                        key={index}\r\n                                        {...tab}\r\n                                    />\r\n                                ))}\r\n                            </StyledTabs>\r\n                            {isResponsive && tabs.length > 5 ? (\r\n                                <IconButton\r\n                                    sx={{ minWidth: '48px' }}\r\n                                    onClick={() => navigate(addSegment(segmentName))}\r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            ) : null}\r\n                        </TabsContainer>\r\n                        <Divider sx={{ mt: '-1px' }} />\r\n                    </>\r\n                </Sticky>\r\n            )}\r\n            {!isResponsive && tabs.length > 10 ? (\r\n                <>\r\n                    <Divider />\r\n                    <Grid container>\r\n                        <Grid item sm={3}>\r\n                            <TabList tabs={tabs} value={value} />\r\n                        </Grid>\r\n                        <Divider orientation=\"vertical\" sx={{ mr: '-1px' }} flexItem />\r\n                        <Grid item sm={9}>\r\n                            {children}\r\n                        </Grid>\r\n                    </Grid>\r\n                </>\r\n            ) : children}\r\n            {isResponsive && tabs.length > 5 ? (\r\n                <BottomSheet\r\n                    open={hasSegment(segmentName)}\r\n                    onClose={() => navigate(removeSegment(segmentName), { replace: true })}\r\n                >\r\n                    <DialogTitle sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                        <Box>گزینه‌های بیشتر</Box>\r\n                        <IconButton onClick={() => navigate(removeSegment(segmentName), { replace: true })} size=\"small\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <TabList tabs={tabs} value={value} />\r\n                </BottomSheet>\r\n            ) : null}\r\n        </Box>\r\n    )\r\n}\r\n\r\nResponsiveTabBar.propTypes = {\r\n\r\n}\r\n\r\nexport default ResponsiveTabBar;","import DashboardOutlined from \"@mui/icons-material/DashboardOutlined\";\r\nimport GridViewOutlined from \"@mui/icons-material/GridViewOutlined\";\r\nimport { Box, Card, Container, Typography } from \"@mui/material\";\r\nimport { Outlet, useLocation } from \"react-router\";\r\nimport { useTask } from \"../../../../Application\";\r\nimport ResponsiveContainer from \"../../../../components/ResponsiveContainer\";\r\nimport ResponsiveTabBar from \"../../../../components/ResponsiveTabBar\";\r\nimport { TabView } from \"../../../../tabs\";\r\nimport useNavigateTask from \"../../../../utils/useNavigateTask\";\r\n\r\nconst tour = {\r\n    key: 'manage-cases',\r\n    steps: [{\r\n        title: \"مدیریت پرونده‌ها\",\r\n        intro: \"\",\r\n    }, {\r\n        title: \"پرونده جدید\",\r\n        intro: \"با کلیک برروی این دکمه و ورود مشخصات پرونده می‌توانید پرونده جدیدی به لیست پرونده‌ها اضافه کنید.\",\r\n        element: \".add-new\",\r\n    }]\r\n};\r\n\r\nconst Boards = () => {\r\n\r\n    const location = useLocation();\r\n\r\n    const navigateTask = useNavigateTask();\r\n\r\n\r\n    const taskHome = useTask('Tasks.home');\r\n    const taskList = useTask('Tasks.list');\r\n\r\n\r\n    return (\r\n        <TabView {...taskHome} tour={tour}>\r\n            <ResponsiveContainer fullHeight>\r\n                <Container disableGutters>\r\n                    <Card variant=\"outlined\" sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\r\n\r\n                        <Box sx={{\r\n                            display: \"flex\",\r\n                            alignItems: 'start',\r\n                            justifyContent: 'start',\r\n                            p: { xs: 2, sm: 3 }\r\n                        }}\r\n                        >\r\n                            <Box sx={{ flexGrow: 1, display: 'flex', alignItems: 'center' }}>\r\n                                <Box sx={{ flexGrow: 1 }}>\r\n                                    <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\r\n                                        مدیریت وظایف\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <ResponsiveTabBar\r\n                            tabs={[\r\n                                {\r\n                                    label: 'پیشخوان',\r\n                                    value: `/tasks`,\r\n                                    icon: <DashboardOutlined />,\r\n                                    onClick: () => navigateTask(taskHome)\r\n                                },\r\n                                {\r\n                                    label: 'بردهای وظایف',\r\n                                    value: `/tasks/boards`,\r\n                                    icon: <GridViewOutlined />,\r\n                                    onClick: () => navigateTask(taskList)\r\n                                },\r\n                            ]}\r\n                            value={location.pathname}\r\n                        >\r\n                            <Outlet />\r\n                        </ResponsiveTabBar>\r\n                    </Card>\r\n                </Container>\r\n            </ResponsiveContainer>\r\n        </TabView>\r\n    )\r\n}\r\n\r\n\r\nexport default Boards","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z\"\n}), 'DashboardOutlined');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 3v8h8V3H3zm6 6H5V5h4v4zm-6 4v8h8v-8H3zm6 6H5v-4h4v4zm4-16v8h8V3h-8zm6 6h-4V5h4v4zm-6 4v8h8v-8h-8zm6 6h-4v-4h4v4z\"\n}), 'GridViewOutlined');\nexports.default = _default;"],"names":["TabsContainer","styled","Box","theme","display","background","StyledTabs","props","_jsx","Tabs","TabIndicatorProps","children","className","StyledTab","Tab","disableRipple","shouldForwardProp","prop","isUnderTabBar","transition","transitions","create","borderTopLeftRadius","shape","borderRadius","borderTopRightRadius","backgroundColor","alpha","palette","primary","main","TabList","tabs","value","List","map","tab","index","ListItem","disablePadding","divider","_jsxs","ListItemButton","onClick","selected","ListItemIcon","icon","ListItemText","label","ResponsiveTabBar","useTheme","isResponsive","useMediaQuery","breakpoints","down","navigate","useNavigate","segmentName","hasSegment","addSegment","removeSegment","useLocationHash","isSticky","setIsSticky","useState","isTabBarHidden","useHideOnScroll","length","Sticky","top","innerZ","onStateChange","status","_Fragment","variant","scrollButtons","sx","flexGrow","minHeight","slice","iconPosition","IconButton","minWidth","MenuIcon","Divider","mt","Grid","container","item","sm","orientation","mr","flexItem","BottomSheet","open","onClose","replace","DialogTitle","justifyContent","alignItems","size","CloseIcon","tour","key","steps","title","intro","element","Boards","location","useLocation","navigateTask","useNavigateTask","taskHome","useTask","taskList","TabView","ResponsiveContainer","fullHeight","Container","disableGutters","Card","flexDirection","p","xs","Typography","fontWeight","DashboardOutlined","GridViewOutlined","pathname","Outlet","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}