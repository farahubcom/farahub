{"version":3,"file":"static/js/5033.6bd7902d.chunk.js","mappings":"mTAmBA,MAoFA,EApFgBA,KACZ,MAAM,KAAEC,IAASC,EAAAA,EAAAA,OAEX,aAAEC,EAAY,SAAEC,EAAQ,SAAEC,GAAaJ,GAEtCK,EAAkBC,IAAuBC,EAAAA,EAAAA,UAAS,CAAEC,MAAM,IAejE,OAJAC,EAAAA,EAAAA,IAAoB,KAChBP,GAAc,GACf,CAACC,EAAS,WAGTO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAACG,EAAAA,EAAS,CAACC,SAAS,KAAIF,SAAA,EACpBG,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CACRC,MAAM,6EACNC,YAAY,oTAA8DN,UAE1EG,EAAAA,EAAAA,KAACI,EAAAA,GAAQ,CAACC,gBAAc,EAACC,gBAAc,EAAAT,UACnCF,EAAAA,EAAAA,MAACY,EAAAA,EAAc,CACXC,UAAQ,EACRC,QAxBNC,EAACC,EAAeC,EAAU,CAAC,IAClC,KACHrB,EAAoB,CAChBoB,mBACGC,EACHnB,MAAM,GACR,EAkBuBiB,EACL,EAAGG,QAAOxB,eACNW,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CACNC,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAW,EACXC,MAAM,2DACNC,QAAQ,SACRN,MAAOA,EACPO,SAAWC,GACPhC,EAASgC,EAAEC,OAAOT,OAEtBU,WAAS,KAGjB,CACIrB,MAAO,2DACPsB,aAAcpC,EAAS,QACvBqC,SAAWZ,IACPxB,EAAS,OAAQwB,GACjBtB,EAAoB,CAChBE,MAAM,GACR,IAGZI,SAAA,EAEFG,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,CAAA7B,UACTG,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,CACJC,UAAWC,EAAAA,GACXC,KAAK,4BAGb9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAY,CACTC,QAAS5C,EAAS,SAAW,IAC7B6C,WACIjC,EAAAA,EAAAA,KAAAJ,EAAAA,SAAA,CAAAC,UACIG,EAAAA,EAAAA,KAAA,QAAAH,SAAM,yEAO9BG,EAAAA,EAAAA,KAACkC,EAAAA,EAAO,QAGZlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAiB,IACV7C,EACJ8C,QAASA,IAAM7C,EAAoB,CAAEE,MAAM,QAEhD,C,wECjGX,MAkBA,EAlBoBQ,EAChBC,QACAC,cACAN,eAGIF,EAAAA,EAAAA,MAAC0C,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAAI7C,SAAA,EAC7CF,EAAAA,EAAAA,MAAC0C,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEhD,SAAA,EACrBG,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAAC3B,QAAQ,KAAItB,SAAEK,KAC1BF,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAAC3B,QAAQ,QAAQ4B,MAAM,iBAAgBlD,SAAEM,QAExDH,EAAAA,EAAAA,KAACqC,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEhD,SACpBA,M,6JCAjB,MAoDA,EApD0BsC,EACzBjC,QACAsB,eACAC,WACAhC,OACA2C,UACAzB,gBACAqC,cAAc,CAAC,MAEf,MAAOnC,EAAOxB,IAAYG,EAAAA,EAAAA,UAASgC,GAGnC,OAFAyB,EAAAA,EAAAA,YAAU,IAAM5D,EAASI,EAAO+B,EAAe,OAAO,CAAC/B,KAGtDE,EAAAA,EAAAA,MAACuD,EAAAA,EAAgB,CAChBzD,KAAMA,EACN2C,QAASA,EACTY,YAAa,CAAE/B,WAAW,EAAMlB,SAAU,QAASiD,GAAcnD,SAAA,EAEjEF,EAAAA,EAAAA,MAACwD,EAAAA,EAAW,CACXX,GAAI,CACHY,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UACXzD,SAAA,EAEFG,EAAAA,EAAAA,KAACuD,EAAAA,EAAG,CAAA1D,SAAEK,KACNF,EAAAA,EAAAA,KAACwD,EAAAA,EAAU,CAAC/C,QAAS2B,EAASqB,KAAK,QAAO5D,UACzCG,EAAAA,EAAAA,KAAC0D,EAAAA,EAAS,UAGZ1D,EAAAA,EAAAA,KAACkC,EAAAA,EAAO,KACRlC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAa,CAAA9D,SACZc,GAAiBA,EAAc,CAAEE,QAAOxB,gBAE1CW,EAAAA,EAAAA,KAACkC,EAAAA,EAAO,KACRvC,EAAAA,EAAAA,MAACiE,EAAAA,EAAa,CAAA/D,SAAA,EACbG,EAAAA,EAAAA,KAAC6D,EAAAA,EAAM,CACNC,KAAK,SACL3C,QAAQ,YACRV,QAAUY,GAAMI,EAASZ,GAAOhB,SAChC,wBAGDG,EAAAA,EAAAA,KAACuD,EAAAA,EAAG,CAACf,GAAI,CAAEuB,SAAU,MACrB/D,EAAAA,EAAAA,KAAC6D,EAAAA,EAAM,CAACC,KAAK,SAASrD,QAAS2B,EAAQvC,SAAC,8CAIvB,C","sources":["modules/core/pages/Settings/General.js","components/FormSection.js","components/SingleFieldDialog.js"],"sourcesContent":["import { Icon as Iconify } from \"@iconify/react\";\r\nimport {\r\n    Container,\r\n    Divider,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    SvgIcon\r\n} from \"@mui/material\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\n\r\nimport { useState } from \"react\";\r\nimport FormSection from \"../../../../components/FormSection\";\r\nimport SingleFieldDialog from \"../../../../components/SingleFieldDialog\";\r\nimport TextField from \"../../../../components/TextField\";\r\nimport useAfterFirstRender from \"../../../../utils/useAfterFirstRender\";\r\n\r\n\r\nconst General = () => {\r\n    const { form } = useOutletContext();\r\n\r\n    const { handleSubmit, getValue, setValue } = form;\r\n\r\n    const [fieldDialogProps, setFieldDialogProps] = useState({ open: false });\r\n    const openField = (renderContent, options = {}) => {\r\n        return () => {\r\n            setFieldDialogProps({\r\n                renderContent,\r\n                ...options,\r\n                open: true,\r\n            });\r\n        };\r\n    };\r\n\r\n    useAfterFirstRender(() => {\r\n        handleSubmit();\r\n    }, [getValue(\"name\")]);\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"lg\">\r\n                <FormSection\r\n                    title=\"مشخصات میز کار\"\r\n                    description=\"مشخصات عمومی میز کار که در برنامه های مختلف استفاده می‌شوند.\"\r\n                >\r\n                    <ListItem disableGutters disablePadding>\r\n                        <ListItemButton\r\n                            selected\r\n                            onClick={openField(\r\n                                ({ value, setValue }) => (\r\n                                    <TextField\r\n                                        InputLabelProps={{ shrink: true }}\r\n                                        fullWidth={true}\r\n                                        label=\"نام میز کار\"\r\n                                        variant=\"filled\"\r\n                                        value={value}\r\n                                        onChange={(e) =>\r\n                                            setValue(e.target.value)\r\n                                        }\r\n                                        autoFocus\r\n                                    />\r\n                                ),\r\n                                {\r\n                                    title: \"نام میز کار\",\r\n                                    defaultValue: getValue(\"name\"),\r\n                                    onSubmit: (value) => {\r\n                                        setValue(\"name\", value);\r\n                                        setFieldDialogProps({\r\n                                            open: false,\r\n                                        });\r\n                                    },\r\n                                }\r\n                            )}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <SvgIcon \r\n                                    component={Iconify}\r\n                                    icon=\"solar:user-id-linear\"\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                primary={getValue(\"name\") || \"-\"}\r\n                                secondary={\r\n                                    <>\r\n                                        <span>نام میز کار</span>\r\n                                    </>\r\n                                }\r\n                            />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                </FormSection>\r\n                <Divider />\r\n            </Container>\r\n\r\n            <SingleFieldDialog\r\n                {...fieldDialogProps}\r\n                onClose={() => setFieldDialogProps({ open: false })}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default General;\r\n","import { Grid, Typography } from \"@mui/material\";\r\n\r\nconst FormSection = ({\r\n    title,\r\n    description,\r\n    children\r\n}) => {\r\n    return (\r\n        <Grid container spacing={2} sx={{ mt: 3, py: 3 }}>\r\n            <Grid item xs={12} md={4}>\r\n                <Typography variant=\"h6\">{title}</Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">{description}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={8}>\r\n                {children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default FormSection;","import CloseIcon from \"@mui/icons-material/CloseOutlined\";\r\nimport {\r\n\tBox,\r\n\tButton,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tDivider,\r\n\tIconButton,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport ResponsiveDialog from \"./ResponsiveDialog\";\r\n\r\nconst SingleFieldDialog = ({\r\n\ttitle,\r\n\tdefaultValue,\r\n\tonSubmit,\r\n\topen,\r\n\tonClose,\r\n\trenderContent,\r\n\tdialogProps = {},\r\n}) => {\r\n\tconst [value, setValue] = useState(defaultValue);\r\n\tuseEffect(() => setValue(open ? defaultValue : null), [open]);\r\n\r\n\treturn (\r\n\t\t<ResponsiveDialog\r\n\t\t\topen={open}\r\n\t\t\tonClose={onClose}\r\n\t\t\tdialogProps={{ fullWidth: true, maxWidth: \"xs\", ...dialogProps }}\r\n\t\t>\r\n\t\t\t<DialogTitle\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Box>{title}</Box>\r\n\t\t\t\t<IconButton onClick={onClose} size=\"small\">\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<Divider />\r\n\t\t\t<DialogContent>\r\n\t\t\t\t{renderContent && renderContent({ value, setValue })}\r\n\t\t\t</DialogContent>\r\n\t\t\t<Divider />\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tonClick={(e) => onSubmit(value)}\r\n\t\t\t\t>\r\n\t\t\t\t\tثبت\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Box sx={{ flexGrow: 1 }}></Box>\r\n\t\t\t\t<Button type=\"button\" onClick={onClose}>\r\n\t\t\t\t\tانصراف\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</ResponsiveDialog>\r\n\t);\r\n};\r\n\r\nexport default SingleFieldDialog;\r\n"],"names":["General","form","useOutletContext","handleSubmit","getValue","setValue","fieldDialogProps","setFieldDialogProps","useState","open","useAfterFirstRender","_jsxs","_Fragment","children","Container","maxWidth","_jsx","FormSection","title","description","ListItem","disableGutters","disablePadding","ListItemButton","selected","onClick","openField","renderContent","options","value","TextField","InputLabelProps","shrink","fullWidth","label","variant","onChange","e","target","autoFocus","defaultValue","onSubmit","ListItemIcon","SvgIcon","component","Iconify","icon","ListItemText","primary","secondary","Divider","SingleFieldDialog","onClose","Grid","container","spacing","sx","mt","py","item","xs","md","Typography","color","dialogProps","useEffect","ResponsiveDialog","DialogTitle","display","justifyContent","alignItems","Box","IconButton","size","CloseIcon","DialogContent","DialogActions","Button","type","flexGrow"],"sourceRoot":""}