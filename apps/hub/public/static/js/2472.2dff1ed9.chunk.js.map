{"version":3,"file":"static/js/2472.2dff1ed9.chunk.js","mappings":"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","sources":["components/IconButton.js","components/ResponsiveActionBar.js","components/ResponsiveTabBar.js","modules/core/components/PlansDialog.js","modules/core/components/WorkspaceFormDialog.js","modules/core/pages/WorkspaceDetails/WorkspaceDetails.js","../node_modules/@mui/icons-material/MoreVertOutlined.js","../node_modules/@mui/material/Fab/fabClasses.js","../node_modules/@mui/material/Fab/Fab.js"],"sourcesContent":["import { styled } from '@mui/material';\r\nimport MuiIconButton from '@mui/material/IconButton';\r\nimport MuiTypography from '@mui/material/Typography';\r\nimport React from 'react';\r\n\r\nconst StyledIconButton = styled(MuiIconButton)(({ theme }) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minWidth: 12 + 1 + 6 + 24 + 6 + 1 + 8 + 24.5 + 12\r\n}))\r\n\r\nconst IconContainer = styled('span')(({ theme }) => ({\r\n    display: 'inline-block'\r\n}))\r\n\r\nconst Typography = styled(MuiTypography)(({ theme }) => ({\r\n    ...theme.typography.button,\r\n    display: 'inline-block'\r\n}))\r\n\r\nconst IconButton = ({ label, labelTypographyProps = {}, children, ...props }) => {\r\n    return (\r\n        <StyledIconButton {...props}>\r\n            <IconContainer>{children}</IconContainer>\r\n            {label && <Typography {...labelTypographyProps}>{label}</Typography>}\r\n        </StyledIconButton>\r\n    );\r\n}\r\n\r\nexport default IconButton;","import { Box, Button, DialogContent, Grid, Fab as MuiFab, Slide, Stack, styled, useMediaQuery, useTheme } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Authorized } from \"../auth\";\r\nimport useHideOnScroll from \"../utils/useHideOnScroll\";\r\nimport useLocationHash from \"../utils/useLocationHash\";\r\nimport IconButton from \"./IconButton\";\r\nimport ResponsiveDialog from \"./ResponsiveDialog\";\r\n\r\n\r\nconst Fab = styled(MuiFab)(({ theme }) => ({\r\n    position: 'fixed',\r\n    bottom: `calc(${theme.spacing(2)} + 48px)`,\r\n    left: theme.spacing(2),\r\n    zIndex: 100\r\n}));\r\n\r\nconst Navbar = styled(Box)(({ theme }) => ({\r\n    //\r\n}));\r\n\r\nconst IconContainer = styled('span')(({ theme }) => ({\r\n    border: \"1px solid currentColor\",\r\n    borderRadius: '50%',\r\n    padding: theme.spacing(.75),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n}));\r\n\r\nconst ResponsiveActionBar = ({\r\n    actions = [],\r\n    ResponsiveActionComponent = Fab,\r\n    responsiveActionProps = {},\r\n    ResponsiveActionIcon,\r\n    showResponsiveOnDesktop = false\r\n}) => {\r\n\r\n    const theme = useTheme();\r\n    const isResponsive = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const navigate = useNavigate();\r\n    const segmentName = 'actions';\r\n    const { hasSegment, addSegment, removeSegment } = useLocationHash();\r\n\r\n    const isActionComponentHidden = useHideOnScroll();\r\n\r\n    const ResponsiveActionComponentContainer = ({ children }) => actions.length > 1 ? (<>{children}</>) : (\r\n        <Slide direction=\"up\" in={!isActionComponentHidden} mountOnEnter unmountOnExit>{children}</Slide>\r\n    )\r\n\r\n\r\n    return showResponsiveOnDesktop || isResponsive ? (\r\n        <>\r\n            <ResponsiveActionComponentContainer>\r\n                <ResponsiveActionComponent\r\n                    onClick={actions.length > 1 ? () => navigate(addSegment(segmentName)) : actions[0]?.onClick}\r\n                    {...responsiveActionProps}\r\n                >\r\n                    {actions.length > 1 ? ResponsiveActionIcon : actions[0]?.icon}\r\n                </ResponsiveActionComponent>\r\n            </ResponsiveActionComponentContainer>\r\n            {actions.length > 0 && (\r\n                <ResponsiveDialog\r\n                    dialogProps={{\r\n                        fullWidth: true,\r\n                        maxWidth: \"xs\"\r\n                    }}\r\n                    open={hasSegment(segmentName)}\r\n                    onClose={() => navigate(removeSegment(segmentName), { replace: true })}\r\n                >\r\n                    <DialogContent>\r\n                        <Grid container columns={3}>\r\n                            {actions.map((action, index) => {\r\n                                return (\r\n                                    <Authorized key={index} authorize={action.authorize}>\r\n                                        <Grid item xs={1} alignItems=\"center\" justifyContent=\"center\">\r\n                                            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                <IconButton\r\n                                                    label={action.title}\r\n                                                    onClick={action.onClick}\r\n                                                    size=\"large\"\r\n                                                    color=\"inherit\"\r\n                                                    labelTypographyProps={{\r\n                                                        sx: { mt: 1 }\r\n                                                    }}\r\n                                                >\r\n                                                    <IconContainer>\r\n                                                        {action.icon}\r\n                                                    </IconContainer>\r\n                                                </IconButton>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </Authorized>\r\n                                )\r\n                            })}\r\n                        </Grid>\r\n                    </DialogContent>\r\n                </ResponsiveDialog>\r\n            )}\r\n        </>\r\n    ) : (\r\n        <Navbar>\r\n            <Stack direction={isResponsive ? \"row-reverse\" : \"row\"} spacing={1}>\r\n                {actions.map((action, index) => (\r\n                    <Authorized key={index} authorize={action.authorize}>\r\n                        <Button\r\n                            variant=\"transparent\"\r\n                            disableElevation\r\n                            startIcon={action.icon}\r\n                            onClick={action.onClick}\r\n                            {...action.buttonProps}\r\n                        >\r\n                            {action.title}\r\n                        </Button>\r\n                    </Authorized>\r\n                ))}\r\n            </Stack>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nResponsiveActionBar.propTypes = {\r\n    // ResponsiveActionIcon: PropsTypes.element.isRequired\r\n}\r\nexport default ResponsiveActionBar;","import CloseIcon from \"@mui/icons-material/CloseOutlined\";\r\nimport MenuIcon from \"@mui/icons-material/MenuOutlined\";\r\nimport { Box, DialogTitle, Divider, Grid, IconButton, List, ListItem, ListItemButton, ListItemIcon, ListItemText, Tab, Tabs, alpha, styled, useMediaQuery, useTheme } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Sticky from 'react-stickynode';\r\nimport useLocationHash from \"../utils/useLocationHash\";\r\nimport BottomSheet from \"./BottomSheet\";\r\nimport useHideOnScroll from \"../utils/useHideOnScroll\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst TabsContainer = styled(Box)(({ theme }) => ({\r\n    display: 'flex',\r\n    background: '#fff',\r\n}))\r\n\r\nconst StyledTabs = styled((props) => (\r\n    <Tabs\r\n        {...props}\r\n        TabIndicatorProps={{ children: <span className=\"MuiTabs-indicatorSpan\" /> }}\r\n    />\r\n))(({ theme }) => ({\r\n    //\r\n}));\r\n\r\nconst StyledTab = styled((props) => <Tab disableRipple {...props} />, {\r\n    shouldForwardProp: prop => prop !== 'isUnderTabBar'\r\n})(\r\n    ({ theme, isUnderTabBar }) => ({\r\n        transition: theme.transitions.create('all'),\r\n        borderTopLeftRadius: !isUnderTabBar && theme.shape.borderRadius * 3,\r\n        borderTopRightRadius: !isUnderTabBar && theme.shape.borderRadius * 3,\r\n        '&.Mui-selected': {\r\n            backgroundColor: alpha(theme.palette.primary.main, 0.1)\r\n        },\r\n    }));\r\n\r\n\r\nconst TabList = ({ tabs, value }) => {\r\n    return (\r\n        <List>\r\n            {tabs.map((tab, index) => (\r\n                <ListItem disablePadding divider key={index}>\r\n                    <ListItemButton onClick={tab.onClick} selected={value === tab.value}>\r\n                        <ListItemIcon>\r\n                            {tab.icon}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={tab.label} />\r\n                    </ListItemButton>\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\n\r\n\r\nconst ResponsiveTabBar = ({\r\n    tabs,\r\n    children,\r\n    value\r\n}) => {\r\n\r\n    const theme = useTheme()\r\n    const isResponsive = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const navigate = useNavigate();\r\n    const segmentName = 'more';\r\n    const { hasSegment, addSegment, removeSegment } = useLocationHash();\r\n\r\n    const [isSticky, setIsSticky] = useState(false);\r\n    const isTabBarHidden = useHideOnScroll();\r\n\r\n    const handleStateChange = status => setIsSticky(status.status === Sticky.STATUS_FIXED);\r\n    const isNavStickedUnderTabBar = () => !isTabBarHidden && isSticky;\r\n\r\n\r\n    return (\r\n        <Box>\r\n            {!(!isResponsive && tabs.length > 10) && (\r\n                <Sticky\r\n                    top={isTabBarHidden ? 48 : 48 * 2}\r\n                    innerZ={1200}\r\n                    onStateChange={handleStateChange}\r\n                >\r\n                    <>\r\n                        <TabsContainer>\r\n                            <StyledTabs\r\n                                variant=\"scrollable\"\r\n                                scrollButtons=\"auto\"\r\n                                // allowScrollButtonsMobile\r\n                                value={value}\r\n                                sx={{ flexGrow: 1, minHeight: 'unset' }}\r\n                            >\r\n                                {tabs.slice(0, isResponsive ? 5 : 10).map((tab, index) => (\r\n                                    <StyledTab\r\n                                        isUnderTabBar={isNavStickedUnderTabBar()}\r\n                                        iconPosition=\"start\"\r\n                                        sx={{ minHeight: 'unset' }}\r\n                                        key={index}\r\n                                        {...tab}\r\n                                    />\r\n                                ))}\r\n                            </StyledTabs>\r\n                            {isResponsive && tabs.length > 5 ? (\r\n                                <IconButton\r\n                                    sx={{ minWidth: '48px' }}\r\n                                    onClick={() => navigate(addSegment(segmentName))}\r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            ) : null}\r\n                        </TabsContainer>\r\n                        <Divider sx={{ mt: '-1px' }} />\r\n                    </>\r\n                </Sticky>\r\n            )}\r\n            {!isResponsive && tabs.length > 10 ? (\r\n                <>\r\n                    <Divider />\r\n                    <Grid container>\r\n                        <Grid item sm={3}>\r\n                            <TabList tabs={tabs} value={value} />\r\n                        </Grid>\r\n                        <Divider orientation=\"vertical\" sx={{ mr: '-1px' }} flexItem />\r\n                        <Grid item sm={9}>\r\n                            {children}\r\n                        </Grid>\r\n                    </Grid>\r\n                </>\r\n            ) : children}\r\n            {isResponsive && tabs.length > 5 ? (\r\n                <BottomSheet\r\n                    open={hasSegment(segmentName)}\r\n                    onClose={() => navigate(removeSegment(segmentName), { replace: true })}\r\n                >\r\n                    <DialogTitle sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                        <Box>گزینه‌های بیشتر</Box>\r\n                        <IconButton onClick={() => navigate(removeSegment(segmentName), { replace: true })} size=\"small\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <TabList tabs={tabs} value={value} />\r\n                </BottomSheet>\r\n            ) : null}\r\n        </Box>\r\n    )\r\n}\r\n\r\nResponsiveTabBar.propTypes = {\r\n\r\n}\r\n\r\nexport default ResponsiveTabBar;","import SearchIcon from \"@mui/icons-material/Search\";\r\nimport NoResultItem from \"@mui/icons-material/Warning\";\r\nimport {\r\n    Box,\r\n    Button, CircularProgress, Dialog,\r\n    DialogActions,\r\n    DialogTitle, Divider, InputAdornment, styled, Table, TableBody, TableCell,\r\n    TableContainer, TableHead, TableRow\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useMiddleware } from \"../../../Application\";\r\nimport TextField from \"../../../components/TextField\";\r\nimport useDebounce from '../../../utils/useDebounce';\r\n\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme, hover, selected }) => ({\r\n    cursor: hover ? 'pointer' : 'auto',\r\n    backgroundColor: selected ? theme.palette.action.hover : theme.palette.common.white,\r\n    '&:focus': {\r\n        backgroundColor: theme.palette.action.hover,\r\n    },\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\nconst PlansTable = ({\r\n    loading,\r\n    plans,\r\n    selected,\r\n    onSelect,\r\n    selectable\r\n}) => {\r\n\r\n    if (loading) {\r\n        return (\r\n            <Box sx={{ px: 5, py: 5, textAlign: \"center\" }}>\r\n                <CircularProgress />\r\n            </Box>\r\n        )\r\n    }\r\n\r\n    if (plans.length < 1) {\r\n        return (\r\n            <Box sx={{ px: 5, py: 5, textAlign: \"center\" }}>\r\n                <NoResultItem fontSize=\"large\" />\r\n                <p>موردی جهت نمایش وجود ندارد.</p>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <TableContainer sx={{ overflow: \"auto\", maxHeight: 400 }}>\r\n            <Table stickyHeader size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\">#</TableCell>\r\n                        <TableCell>پلن</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {plans.map((plan, index) => (\r\n                        <StyledTableRow\r\n                            key={index}\r\n                            selected={Boolean(selectable && selected && selected.id === plan.id)}\r\n                            hover={selectable}\r\n                            onClick={() => selectable && onSelect(plan)}\r\n                        >\r\n                            <TableCell align=\"center\">{index + 1}</TableCell>\r\n                            <TableCell>{plan.name['fa-IR']}</TableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer >\r\n    )\r\n}\r\n\r\nconst PlansDialog = ({\r\n    category,\r\n    open,\r\n    onClose,\r\n    selectable,\r\n    selected,\r\n    onSelect,\r\n    onClear,\r\n    requestConfig\r\n}) => {\r\n\r\n    const middleware = useMiddleware('core.modules');\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [plans, setPlans] = useState([]);\r\n\r\n    const [query, setQuery] = useState('');\r\n\r\n\r\n    const debouncedQuery = useDebounce(query, 500);\r\n\r\n    const _loadDataAsync = async () => {\r\n        const { ok, data } = await middleware.plans({\r\n            query: debouncedQuery,\r\n            ...(category && {\r\n                category: category.id,\r\n            }),\r\n            ...(query === '' ? {\r\n                page: 0,\r\n                perPage: 100\r\n            } : {})\r\n        }, requestConfig);\r\n\r\n        if (ok) {\r\n            setPlans(data);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            _loadDataAsync();\r\n        } else {\r\n            const timer = setTimeout(() => {\r\n                setLoading(true);\r\n                if (query !== '') setQuery('');\r\n            }, 500);\r\n\r\n            return () => {\r\n                clearTimeout(timer);\r\n            }\r\n        }\r\n    }, [open, debouncedQuery]);\r\n\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n        >\r\n            <DialogTitle>\r\n                {selectable ? 'انتخاب پلن' : 'مدیریت پلن‌ها'}\r\n            </DialogTitle>\r\n            <Divider />\r\n            <Box sx={{ p: 2 }}>\r\n                <TextField\r\n                    InputLabelProps={{ shrink: true }}\r\n                    fullWidth={true}\r\n                    size=\"small\"\r\n                    variant=\"filled\"\r\n                    label=\"عنوان پلن\"\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    autoFocus\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\"><SearchIcon /></InputAdornment>\r\n                    }}\r\n                />\r\n            </Box>\r\n            <PlansTable\r\n                loading={loading}\r\n                plans={plans}\r\n                selectable={selectable}\r\n                selected={selected}\r\n                onSelect={onSelect}\r\n            />\r\n            <Divider />\r\n            <DialogActions>\r\n                {onClear && <Button type=\"button\" onClick={onClear}>پاک کردن</Button>}\r\n                <Box sx={{ flexGrow: 1 }}></Box>\r\n                <Button type=\"button\" onClick={onClose}>انصراف</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default PlansDialog;","import SaveIcon from \"@mui/icons-material/Save\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport {\r\n    Box,\r\n    Button, Dialog,\r\n    DialogActions,\r\n    DialogTitle, Divider, Grid\r\n} from \"@mui/material\";\r\nimport forOwn from \"lodash/forOwn\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm, useWatch } from \"react-hook-form\";\r\nimport { useComponent, useMiddleware } from \"../../../Application\";\r\nimport TextField from \"../../../components/TextField\";\r\nimport useDialog from \"../../../utils/useDialog\";\r\nimport PlansDialog from \"./PlansDialog\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\n\r\nconst WorkspaceFormDialog = ({\r\n    open,\r\n    onClose,\r\n    workspace,\r\n    onCreateOrUpdate\r\n}) => {\r\n\r\n    const middleware = useMiddleware('core.workspaces');\r\n\r\n    const CategoriesDialog = useComponent('Categories.CategoriesDialog');\r\n\r\n    const defaultValues = {\r\n        name: '',\r\n        category: '',\r\n        plan: '',\r\n        duration: '',\r\n        phone: ''\r\n    }\r\n\r\n    const { control, register, handleSubmit, formState: { errors }, setValue, reset, setError } = useForm({\r\n        defaultValues\r\n    });\r\n\r\n    const category = useWatch({ control, name: \"category\" });\r\n    const plan = useWatch({ control, name: \"plan\" });\r\n\r\n    const [isCreatingOrUpdating, setCreatingOrUpdating] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            const timer = setTimeout(() => {\r\n                reset(defaultValues);\r\n            }, 500);\r\n\r\n            return () => {\r\n                clearTimeout(timer);\r\n            }\r\n        } else {\r\n            if (workspace) reset(workspace);\r\n        }\r\n    }, [open, workspace])\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const _createOrUpdateAsync = async (data) => {\r\n        setCreatingOrUpdating(true);\r\n\r\n        const res = await middleware.create(data);\r\n        if (res.ok) {\r\n            enqueueSnackbar(\"میز کار ثبت گردید.\")\r\n            onClose()\r\n            onCreateOrUpdate(res.workspace)\r\n            reset(defaultValues)\r\n        } else {\r\n            if (res.status === 422) {\r\n                forOwn(res.errors, (value, key) => {\r\n                    setError(key, { type: \"manual\", message: value[0] })\r\n                })\r\n            }\r\n        }\r\n        setCreatingOrUpdating(false);\r\n    }\r\n\r\n    const {\r\n        isOpen: isCategoryDialogOpen,\r\n        open: openCategoryDialog,\r\n        close: closeCategoryDialog\r\n    } = useDialog();\r\n\r\n    const {\r\n        isOpen: isPlanDialogOpen,\r\n        open: openPlanDialog,\r\n        close: closePlanDialog,\r\n        data: planDialogCategory\r\n    } = useDialog();\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n        >\r\n            <DialogTitle>\r\n                {workspace ? 'ویرایش میز کار' : 'ثبت میز کار'}\r\n            </DialogTitle>\r\n            <Divider />\r\n            <Box sx={{ p: 2 }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={8}>\r\n                        <TextField\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth={true}\r\n                            size=\"small\"\r\n                            label=\"نام میز کار\"\r\n                            variant=\"filled\"\r\n                            required\r\n                            autoFocus\r\n                            error={errors.name && true}\r\n                            {...register(\"name\", { required: true })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <TextField\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth={true}\r\n                            size=\"small\"\r\n                            label=\"دسته‌بندی\"\r\n                            variant=\"filled\"\r\n                            value={category ? category.name : ''}\r\n                            onChange={() => { }}\r\n                            inputProps={{\r\n                                readOnly: true\r\n                            }}\r\n                            onFocus={() => openCategoryDialog()}\r\n                            onClick={() => openCategoryDialog()}\r\n                            onKeyDown={e => e.keyCode === 13 && openCategoryDialog()}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <TextField\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth={true}\r\n                            size=\"small\"\r\n                            label=\"شماره همراه صاحب\"\r\n                            variant=\"filled\"\r\n                            required\r\n                            inputProps={{ dir: \"ltr\", className: \"pl-fw-secondary\" }}\r\n                            placeholder=\"09XXXXXXXXX\"\r\n                            error={errors.phone && true}\r\n                            {...register(\"phone\", { required: true })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <TextField\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth={true}\r\n                            size=\"small\"\r\n                            label=\"پلن\"\r\n                            variant=\"filled\"\r\n                            value={plan ? plan.name['fa-IR'] : ''}\r\n                            onChange={() => { }}\r\n                            inputProps={{\r\n                                readOnly: true\r\n                            }}\r\n                            onFocus={() => openPlanDialog(plan)}\r\n                            onClick={() => openPlanDialog(plan)}\r\n                            onKeyDown={e => e.keyCode === 13 && openPlanDialog(plan)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <TextField\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth={true}\r\n                            size=\"small\"\r\n                            label=\"مدت اشتراک آزمایشی\"\r\n                            variant=\"filled\"\r\n                            required\r\n                            inputProps={{ dir: \"ltr\" }}\r\n                            error={errors.duration && true}\r\n                            {...register(\"duration\", { required: true })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n            <Divider />\r\n            <DialogActions>\r\n                <LoadingButton\r\n                    loading={isCreatingOrUpdating}\r\n                    loadingPosition=\"start\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit(_createOrUpdateAsync)}\r\n                >\r\n                    ثبت مشخصات\r\n                </LoadingButton>\r\n                <Box sx={{ flexGrow: 1 }}></Box>\r\n                <Button type=\"button\" onClick={onClose}>انصراف</Button>\r\n            </DialogActions>\r\n\r\n            <CategoriesDialog\r\n                open={isCategoryDialogOpen}\r\n                onClose={closeCategoryDialog}\r\n                label=\"workspace\"\r\n                selectable={true}\r\n                onClear={() => {\r\n                    setValue(\"category\", '');\r\n                    closeCategoryDialog();\r\n                }}\r\n                onSelect={category => {\r\n                    setValue('category', category);\r\n                    closeCategoryDialog();\r\n                }}\r\n                selected={category}\r\n                requestConfig={{\r\n                    transformRequest: [(data, headers) => {\r\n                        delete headers.common['Workspace-ID'];\r\n                        return data;\r\n                    }]\r\n                }}\r\n            />\r\n\r\n            <PlansDialog\r\n                open={isPlanDialogOpen}\r\n                onClose={closePlanDialog}\r\n                selectable={true}\r\n                onClear={() => {\r\n                    setValue(\"plan\", '');\r\n                    closePlanDialog();\r\n                }}\r\n                onSelect={plan => {\r\n                    setValue('plan', plan);\r\n                    closePlanDialog();\r\n                }}\r\n                selected={plan}\r\n                requestConfig={{\r\n                    transformRequest: [(data, headers) => {\r\n                        delete headers.common['Workspace-ID'];\r\n                        return data;\r\n                    }]\r\n                }}\r\n            />\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default WorkspaceFormDialog;","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\r\nimport MoreVertOutlined from \"@mui/icons-material/MoreVertOutlined\";\r\nimport { Box, Card, IconButton, Skeleton, Typography } from \"@mui/material\";\r\nimport flatten from \"lodash/flatten\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { Outlet, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { useMiddleware, useTask } from \"../../../../Application\";\r\nimport { useAuth } from \"../../../../auth\";\r\nimport ResponsiveActionBar from \"../../../../components/ResponsiveActionBar\";\r\nimport ResponsiveContainer from \"../../../../components/ResponsiveContainer\";\r\nimport ResponsiveTabBar from \"../../../../components/ResponsiveTabBar\";\r\nimport { TabView } from \"../../../../tabs\";\r\nimport useDialogProps from \"../../../../utils/useDialogProps\";\r\nimport useFetch from \"../../../../utils/useFetch\";\r\nimport useNavigateTask from \"../../../../utils/useNavigateTask\";\r\n// import PersonDeleteDialog from \"../../components/PersonDeleteDialog\";\r\nimport WorkspaceFormDialog from \"../../components/WorkspaceFormDialog\";\r\nimport {Icon as Iconify} from \"@iconify/react\";\r\n\r\n\r\nconst WorkspaceDetails = () => {\r\n\r\n    const { inject } = useAuth();\r\n\r\n    const middleware = useMiddleware('Core.Workspaces');\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n    const navigateTask = useNavigateTask();\r\n\r\n    const { data, loading, reload } = useFetch({\r\n        deps: [params.workspaceId],\r\n        handler: () => middleware.details(params.workspaceId),\r\n        initialState: {\r\n            data: { person: {} },\r\n            loading: true\r\n        }\r\n    });\r\n\r\n    const { workspace } = data;\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const [formDialogProps, openFormDialog, closeFormDialog] = useDialogProps(\"edit\", {\r\n        hashDeps: [\"defaultValues\"]\r\n    })\r\n    const handleUpdate = () => {\r\n        enqueueSnackbar('مشخصات میز کار بروزرسانی گردید.');\r\n        closeFormDialog();\r\n        reload();\r\n    }\r\n\r\n    // const taskManage = useTask('Products.manage');\r\n    // const [deleteDialogProps, openDeleteDialog, closeDeleteDialog] = useDialogProps(\"delete\", {\r\n    //     hashDeps: [\"person\"]\r\n    // })\r\n    // const handleDelete = () => {\r\n    //     enqueueSnackbar('میز کار حذف گردید.');\r\n    //     closeDeleteDialog();\r\n    //     navigateTask(taskManage, { replace: true });\r\n    // }\r\n\r\n    const injectedHooks = Object.assign({}, ...(inject('Core', 'WorkspaceDetails.Hooks') || []));\r\n\r\n    const task = useTask('Core.workspaceDetails')\r\n\r\n\r\n    return (\r\n        <TabView\r\n            loading={loading}\r\n            {...Object.assign(\r\n                {},\r\n                task(workspace),\r\n                ...(inject('Core', 'WorkspaceDetails.TabView', { loading, workspace }) || [])\r\n            )}\r\n        >\r\n            <ResponsiveContainer fullHeight>\r\n                <Card\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                        flexGrow: 1,\r\n                        display: 'flex',\r\n                        flexDirection: 'column'\r\n                    }}\r\n                >\r\n                    <Box sx={{\r\n                        display: \"flex\",\r\n                        alignItems: 'start',\r\n                        justifyContent: 'start',\r\n                        p: { xs: 2, sm: 3 }\r\n                    }}\r\n                    >\r\n                        <Box sx={{ flexGrow: 1, display: 'flex', alignItems: 'center' }}>\r\n                            {inject('People', 'PersonDetails.PreHeader', { workspace, loading, reload, params, ...injectedHooks })}\r\n\r\n                            <Box sx={{ flexGrow: 1 }}>\r\n                                <Typography variant=\"h5\" sx={{ fontWeight: 600, mb: 1 }}>\r\n                                    {loading ? <Skeleton variant=\"text\" width=\"25%\" /> : workspace.name}\r\n                                </Typography>\r\n                                {/* {loading ? <Skeleton variant=\"text\" width=\"50%\" /> : (\r\n                                    <Stack direction=\"row\" spacing={0.5} sx={{ display: \"inline-flex\" }}>\r\n                                        {data.person?.roles && workspace.roles.map(\r\n                                            (role, index) => <Chip key={index} label={role.name} size=\"small\" />)\r\n                                        }\r\n                                    </Stack>\r\n                                )} */}\r\n                            </Box>\r\n                        </Box>\r\n                        {!loading && (\r\n                            <ResponsiveActionBar\r\n                                actions={sortBy([\r\n                                    // {\r\n                                    //     title: 'ویرایش',\r\n                                    //     icon: <EditIcon fontSize=\"inherit\" />,\r\n                                    //     onClick: () => openFormDialog({ defaultValues: workspace }),\r\n                                    //     buttonProps: {\r\n                                    //         variant: \"contained\"\r\n                                    //     },\r\n                                    //     priority: 100\r\n                                    // },\r\n                                    // {\r\n                                    //     title: 'حذف',\r\n                                    //     icon: <DeleteIcon fontSize=\"inherit\" />,\r\n                                    //     onClick: () => openDeleteDialog({ person }),\r\n                                    //     buttonProps: {\r\n                                    //         variant: \"contained\"\r\n                                    //     },\r\n                                    //     priority: 200\r\n                                    // },\r\n                                    ...flatten((inject('Core', 'WorkspaceDetails.ActionsList', { workspace, loading, reload, params, ...injectedHooks }) || []))\r\n                                ], o => o.priority)}\r\n                                ResponsiveActionComponent={IconButton}\r\n                                ResponsiveActionIcon={<MoreVertOutlined />}\r\n                            />\r\n                        )}\r\n                    </Box>\r\n                    <ResponsiveTabBar\r\n                        tabs={sortBy([\r\n                            {\r\n                                label: 'مشخصات',\r\n                                value: `/workspace/${params.workspaceId}`,\r\n                                icon: <InfoOutlined />,\r\n                                priority: 100\r\n                            },\r\n                            {\r\n                                label: 'اشتراک‌ها',\r\n                                value: `/workspace/${params.workspaceId}/subscriptions`,\r\n                                icon: <Iconify fontSize=\"1.5rem\" icon='solar:bill-check-linear' />,\r\n                                priority: 200\r\n                            },\r\n                            ...(inject('Core', 'WorkspaceDetails.TabsList', { workspace, loading, reload, params, ...injectedHooks }) || [])\r\n                        ].map(o => ({\r\n                            ...o, onClick: () => navigate(\r\n                                o.value,\r\n                                { state: { prev: location } }\r\n                            )\r\n                        })), o => o.priority)}\r\n                        value={location.pathname}\r\n                    >\r\n                        <Outlet context={{ ...data, loading }} />\r\n                    </ResponsiveTabBar>\r\n                </Card>\r\n\r\n                <WorkspaceFormDialog\r\n                    {...formDialogProps}\r\n                    onCreateOrUpdate={handleUpdate}\r\n                />\r\n\r\n                {/* <PersonDeleteDialog\r\n                    {...deleteDialogProps}\r\n                    onDelete={handleDelete}\r\n                /> */}\r\n\r\n                {inject('Core', 'WorkspaceDetails.Footer', { workspace, loading, reload, params, ...injectedHooks })}\r\n            </ResponsiveContainer>\r\n        </TabView>\r\n    )\r\n}\r\n\r\nexport default WorkspaceDetails","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVertOutlined');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFabUtilityClass(slot) {\n  return generateUtilityClass('MuiFab', slot);\n}\nconst fabClasses = generateUtilityClasses('MuiFab', ['root', 'primary', 'secondary', 'extended', 'circular', 'focusVisible', 'disabled', 'colorInherit', 'sizeSmall', 'sizeMedium', 'sizeLarge', 'info', 'error', 'warning', 'success']);\nexport default fabClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport fabClasses, { getFabUtilityClass } from './fabClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant,\n    classes,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `size${capitalize(size)}`, color === 'inherit' ? 'colorInherit' : color]\n  };\n  const composedClasses = composeClasses(slots, getFabUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst FabRoot = styled(ButtonBase, {\n  name: 'MuiFab',\n  slot: 'Root',\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.color === 'inherit' && styles.colorInherit, styles[capitalize(ownerState.size)], styles[ownerState.color]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$palette$getCon, _theme$palette;\n  return _extends({}, theme.typography.button, {\n    minHeight: 36,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n      duration: theme.transitions.duration.short\n    }),\n    borderRadius: '50%',\n    padding: 0,\n    minWidth: 0,\n    width: 56,\n    height: 56,\n    zIndex: (theme.vars || theme).zIndex.fab,\n    boxShadow: (theme.vars || theme).shadows[6],\n    '&:active': {\n      boxShadow: (theme.vars || theme).shadows[12]\n    },\n    color: theme.vars ? theme.vars.palette.text.primary : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),\n    backgroundColor: (theme.vars || theme).palette.grey[300],\n    '&:hover': {\n      backgroundColor: (theme.vars || theme).palette.grey.A100,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: (theme.vars || theme).palette.grey[300]\n      },\n      textDecoration: 'none'\n    },\n    [`&.${fabClasses.focusVisible}`]: {\n      boxShadow: (theme.vars || theme).shadows[6]\n    }\n  }, ownerState.size === 'small' && {\n    width: 40,\n    height: 40\n  }, ownerState.size === 'medium' && {\n    width: 48,\n    height: 48\n  }, ownerState.variant === 'extended' && {\n    borderRadius: 48 / 2,\n    padding: '0 16px',\n    width: 'auto',\n    minHeight: 'auto',\n    minWidth: 48,\n    height: 48\n  }, ownerState.variant === 'extended' && ownerState.size === 'small' && {\n    width: 'auto',\n    padding: '0 8px',\n    borderRadius: 34 / 2,\n    minWidth: 34,\n    height: 34\n  }, ownerState.variant === 'extended' && ownerState.size === 'medium' && {\n    width: 'auto',\n    padding: '0 16px',\n    borderRadius: 40 / 2,\n    minWidth: 40,\n    height: 40\n  }, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.color !== 'inherit' && ownerState.color !== 'default' && (theme.vars || theme).palette[ownerState.color] != null && {\n  color: (theme.vars || theme).palette[ownerState.color].contrastText,\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  '&:hover': {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n    }\n  }\n}), ({\n  theme\n}) => ({\n  [`&.${fabClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled,\n    boxShadow: (theme.vars || theme).shadows[0],\n    backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n  }\n}));\nconst Fab = /*#__PURE__*/React.forwardRef(function Fab(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFab'\n  });\n  const {\n      children,\n      className,\n      color = 'default',\n      component = 'button',\n      disabled = false,\n      disableFocusRipple = false,\n      focusVisibleClassName,\n      size = 'large',\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableFocusRipple,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FabRoot, _extends({\n    className: clsx(classes.root, className),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'error', 'info', 'inherit', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'large'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'extended']), PropTypes.string])\n} : void 0;\nexport default Fab;"],"names":["StyledIconButton","styled","MuiIconButton","theme","display","flexDirection","minWidth","IconContainer","Typography","MuiTypography","typography","button","IconButton","label","labelTypographyProps","children","props","_jsxs","_jsx","Fab","MuiFab","position","bottom","spacing","left","zIndex","Navbar","Box","border","borderRadius","padding","alignItems","justifyContent","ResponsiveActionBar","actions","ResponsiveActionComponent","responsiveActionProps","ResponsiveActionIcon","showResponsiveOnDesktop","_actions$","_actions$2","useTheme","isResponsive","useMediaQuery","breakpoints","down","navigate","useNavigate","segmentName","hasSegment","addSegment","removeSegment","useLocationHash","isActionComponentHidden","useHideOnScroll","ResponsiveActionComponentContainer","length","_Fragment","Slide","direction","in","mountOnEnter","unmountOnExit","onClick","icon","ResponsiveDialog","dialogProps","fullWidth","maxWidth","open","onClose","replace","DialogContent","Grid","container","columns","map","action","index","Authorized","authorize","item","xs","style","title","size","color","sx","mt","Stack","Button","variant","disableElevation","startIcon","buttonProps","TabsContainer","background","StyledTabs","Tabs","TabIndicatorProps","className","StyledTab","Tab","disableRipple","shouldForwardProp","prop","isUnderTabBar","transition","transitions","create","borderTopLeftRadius","shape","borderTopRightRadius","backgroundColor","alpha","palette","primary","main","TabList","tabs","value","List","tab","ListItem","disablePadding","divider","ListItemButton","selected","ListItemIcon","ListItemText","ResponsiveTabBar","isSticky","setIsSticky","useState","isTabBarHidden","Sticky","top","innerZ","onStateChange","status","scrollButtons","flexGrow","minHeight","slice","iconPosition","MenuIcon","Divider","sm","orientation","mr","flexItem","BottomSheet","DialogTitle","CloseIcon","StyledTableRow","TableRow","hover","cursor","common","white","PlansTable","loading","plans","onSelect","selectable","px","py","textAlign","CircularProgress","NoResultItem","fontSize","TableContainer","overflow","maxHeight","Table","stickyHeader","TableHead","TableCell","align","TableBody","plan","Boolean","id","name","PlansDialog","category","onClear","requestConfig","middleware","useMiddleware","setLoading","setPlans","query","setQuery","debouncedQuery","useDebounce","useEffect","timer","setTimeout","clearTimeout","async","ok","data","page","perPage","_loadDataAsync","Dialog","p","TextField","InputLabelProps","shrink","onChange","e","target","autoFocus","InputProps","startAdornment","InputAdornment","SearchIcon","DialogActions","type","WorkspaceFormDialog","workspace","onCreateOrUpdate","CategoriesDialog","useComponent","defaultValues","duration","phone","control","register","handleSubmit","formState","errors","setValue","reset","setError","useForm","useWatch","isCreatingOrUpdating","setCreatingOrUpdating","enqueueSnackbar","useSnackbar","isOpen","isCategoryDialogOpen","openCategoryDialog","close","closeCategoryDialog","useDialog","isPlanDialogOpen","openPlanDialog","closePlanDialog","planDialogCategory","md","required","error","inputProps","readOnly","onFocus","onKeyDown","keyCode","dir","placeholder","LoadingButton","loadingPosition","SaveIcon","res","forOwn","key","message","transformRequest","headers","WorkspaceDetails","inject","useAuth","location","useLocation","params","useParams","reload","useNavigateTask","useFetch","deps","workspaceId","handler","details","initialState","person","formDialogProps","openFormDialog","closeFormDialog","useDialogProps","hashDeps","injectedHooks","Object","assign","task","useTask","TabView","ResponsiveContainer","fullHeight","Card","fontWeight","mb","Skeleton","width","sortBy","flatten","o","priority","MoreVertOutlined","InfoOutlined","Iconify","state","prev","pathname","Outlet","context","handleUpdate","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getFabUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FabRoot","ButtonBase","rootShouldForwardProp","overridesResolver","styles","ownerState","root","capitalize","colorInherit","_theme$palette$getCon","_theme$palette","_extends","short","height","vars","fab","boxShadow","shadows","text","getContrastText","call","grey","A100","textDecoration","fabClasses","contrastText","dark","disabled","disabledBackground","React","inProps","ref","useThemeProps","component","disableFocusRipple","focusVisibleClassName","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","clsx","focusRipple","focusVisible"],"sourceRoot":""}