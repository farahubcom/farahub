{"version":3,"file":"static/js/6060.a737507e.chunk.js","mappings":"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","sources":["modules/customers-club/pages/RewardForm/Form.js","modules/customers-club/pages/RewardForm/Main.js"],"sourcesContent":["import { Icon } from \"@iconify/react\";\r\nimport {\r\n\tAlert,\r\n\tAlertTitle,\r\n\tBox,\r\n\tButton,\r\n\tChip,\r\n\tCollapse,\r\n\tDivider,\r\n\tGrid,\r\n\tInputAdornment,\r\n\tListItem,\r\n\tListItemButton,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tSwitch,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport { filter, get, map, set, some, sumBy } from \"lodash\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useMiddleware } from \"../../../../Application\";\r\nimport TextField from \"../../../../components/TextField\";\r\nimport useForm from \"../../../../utils/useForm\";\r\nimport SmsField from \"../../components/SmsField\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Form = () => {\r\n\tconst { t } = useTranslation([\"customers-club\", \"global\"]);\r\n\r\n\tconst { enqueueSnackbar } = useSnackbar();\r\n\r\n\tconst middleware = useMiddleware(\"Customers-Club.Rewards\");\r\n\r\n\tconst statusVariants = {\r\n\t\tpending: {\r\n\t\t\ttype: \"pending\",\r\n\t\t\tcolor: \"warning\",\r\n\t\t\tlabel: t(\"global:general.pending\"),\r\n\t\t\ttext: t(\"pages.welcome.welcome_pending_text\"),\r\n\t\t},\r\n\t\tconfirmed: {\r\n\t\t\ttype: \"confirmed\",\r\n\t\t\tcolor: \"success\",\r\n\t\t\tlabel: t(\"global:general.active\"),\r\n\t\t\ttext: t(\"pages.welcome.revisit_active_text\"),\r\n\t\t},\r\n\t\trejected: {\r\n\t\t\ttype: \"rejected\",\r\n\t\t\tcolor: \"error\",\r\n\t\t\tlabel: t(\"global:general.inactive\"),\r\n\t\t\ttext: t(\"pages.welcome.welcome_inactive_text\"),\r\n\t\t},\r\n\t};\r\n\tconst getStatusVariant = (type) => statusVariants[type];\r\n\r\n\tconst { register, setValue, getValue, reset, loading, handleSubmit } = useForm({\r\n\t\tinitialValues: {\r\n\t\t\trewards: [],\r\n\t\t\tactive: false,\r\n\t\t},\r\n\t\thandlePost: (data) => middleware.createOrUpdate(data),\r\n\t\tonSubmit: (response) => {\r\n\t\t\tenqueueSnackbar(\r\n\t\t\t\tt(\"global:general.update_successful\", \"Update successful\")\r\n\t\t\t);\r\n\t\t\t// setInitialValues(response.options);\r\n\t\t},\r\n\t});\r\n\r\n\tconst getOptions = async () => {\r\n\t\tconst response = await middleware.getOptions();\r\n\t\treset(response.data);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetOptions();\r\n\t}, []);\r\n\r\n\tconst handleAddReward = () => {\r\n\t\tconst total = sumBy(getValue(\"rewards\"), reward => Number(reward.possiblity));\r\n\r\n\t\tif (total === 100) {\r\n\t\t\tenqueueSnackbar(t(\"احتمال نمیتواند بیشتر از 100 باشد\"));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetValue(\"rewards\", [\r\n\t\t\t...getValue(\"rewards\"),\r\n\t\t\t{\r\n\t\t\t\tpossiblity: 100 - total,\r\n\t\t\t\tmessage: {\r\n\t\t\t\t\tcontent: \"\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t]);\r\n\t};\r\n\r\n\tconst getRewardValue = (index, key, defaultValue) => {\r\n\t\treturn get(getValue(\"rewards\"), `[${index}][${key}]`, defaultValue);\r\n\t};\r\n\r\n\tconst setRewardValue = (index, key, value) => {\r\n\t\tsetValue(\r\n\t\t\t\"rewards\",\r\n\t\t\tmap(getValue(\"rewards\"), (reward, idx) =>\r\n\t\t\t\tidx === index ? set(reward, key, value) : reward\r\n\t\t\t)\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Box sx={{ mb: 2 }}>\r\n\t\t\t\t{!getValue(\"rewards\").length && (\r\n\t\t\t\t\t<Alert severity=\"warning\" icon={false} sx={{ mb: 2 }}>\r\n\t\t\t\t\t\t<Typography>جایزه‌ای وجود ندارد</Typography>\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{getValue(\"rewards\").length > 0 &&\r\n\t\t\t\t\tgetValue(\"rewards\").map((reward, index) => {\r\n\t\t\t\t\t\tconst status = reward?.message?.status ? getStatusVariant(reward?.message?.status) : {};\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Collapse in={[\"pending\", \"rejected\"].includes(status.type)}>\r\n\t\t\t\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\t\t\t\ticon={false}\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"standard\"\r\n\t\t\t\t\t\t\t\t\t\tseverity={status?.color}\r\n\t\t\t\t\t\t\t\t\t\taction={\r\n\t\t\t\t\t\t\t\t\t\t\tstatus?.type === \"pending\" && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Chip color={status?.color} label={status?.label} />\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tsx={{ mb: 2 }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<AlertTitle>{t(\"global:general.status\")}</AlertTitle>\r\n\t\t\t\t\t\t\t\t\t\t{status?.text}\r\n\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\t\t\t\t\tmax={100}\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={t(\"احتمال\")}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={getRewardValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"possiblity\"\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetRewardValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"possiblity\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tدرصد\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"error\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"rewards\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfilter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetValue(\"rewards\"),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(reward, idx) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tidx !== index\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tحذف\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<SmsField\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={t(\"متن پیام...\")}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={getRewardValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"message.content\"\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(value) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetRewardValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"message.content\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Divider sx={{ my: 3 }} />\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tonClick={handleAddReward}\r\n\t\t\t\t\tstartIcon={<Icon icon=\"solar:add-linear\" />}\r\n\t\t\t\t>\r\n\t\t\t\t\tافزودن جایزه\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Box sx={{ my: 2 }} />\r\n\r\n\t\t\t\t<ListItem disableGutters disablePadding>\r\n\t\t\t\t\t<ListItemButton\r\n\t\t\t\t\t\tselected\r\n\t\t\t\t\t\tdisabled={some(getValue(\"rewards\"), reward => reward.message?.status !== \"confirmed\")}\r\n\t\t\t\t\t\tonClick={() => setValue(\"active\", !getValue(\"active\"))}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\tprimary={t(\"ارسال فعال\")}\r\n\t\t\t\t\t\t\tsecondary={t(\r\n\t\t\t\t\t\t\t\t\"در صورت غیر فعال بودن، پیام ارسال نخواهد شد.\"\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\tchecked={getValue(\"active\")}\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tsetValue(\"active\", e.target.checked)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t</ListItemButton>\r\n\t\t\t\t</ListItem>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box sx={{ my: 3 }} />\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\tdisabled={loading || (getValue(\"rewards\").length > 0 && sumBy(getValue(\"rewards\"), reward => Number(reward.possiblity)) < 100)}\r\n\t\t\t>\r\n\t\t\t\t{t(\"global:general.save_changes\")}\r\n\t\t\t</Button>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import { Icon as Iconify } from \"@iconify/react\";\r\nimport { Alert, Card, CardContent, Grid, styled } from \"@mui/material\";\r\nimport DOMPurify from \"dompurify\";\r\nimport Markdown from \"marked-react\";\r\n\r\nimport ResponsiveContainer from \"../../../../components/ResponsiveContainer\";\r\nimport { TabView } from \"../../../../tabs\";\r\nimport Form from \"./Form\";\r\n\r\nconst MarkdownContainer = styled(\"div\")(({ theme }) => ({\r\n    \"& h3\": {\r\n        marginTop: 0,\r\n    },\r\n}));\r\n\r\nconst Page = () => {\r\n    const GUIDE = `\r\n### نکات آموزشی\r\n\r\nبا سرویس جایزه مشتریان را شگفت زده و خوشحال کنید.\r\nچند متن مختلف با احتمال های مختلف تعریف کنید ، هر وقت مشتری شماره خودش را وارد دستگاه کند یکی از این متن ها را بصورت تصادفی و بر اساس احتمالی که شما تعریف کرده اید دریافت می کند.\r\n\r\nبا یک مثال توضیح می دهیم : شما به مشتری می گویید شماره اش را وارد دستگاه کند تا شانس خود برای دریافت تخفیف 50 درصدی را امتحان کند.\r\nسپس چند متن به این صورت تعریف می کنید :\r\nمتن :\"امیدوارم در خرید بعدی برنده تخفیف ویژه ما باشید \" احتمال : 50%\r\nمتن :\"شما برنده 10 درصد تخفیف شدید\" احتمال : 30%\r\nمتن :\"شما برنده ده هزار تومان تخفیف شدید\" احتمال : 15%\r\nمتن :\"شما برنده 50% تخفیف ویژه ما شدید ، تبریک!!\" احتمال : 5%\r\nدر مثال بالا 50% مشتری ها پیامکی را دریافت می کنند که نشان می دهد برنده نشده اند ، 30% برنده 10 درصد تخفیف می شوند ، 15% برنده ده هزار تومان تخفیف و فقط 5% مشتریان برنده تخفیف 50% می شوند.\r\n`;\r\n\r\n    return (\r\n        <TabView\r\n            title=\"ایجاد جایزه\"\r\n            Icon={(props) => (\r\n                <Iconify {...props} icon=\"solar:gift-bold-duotone\" />\r\n            )}\r\n        >\r\n            <ResponsiveContainer>\r\n                <Card variant=\"outlined\" sx={{ mb: 3 }}>\r\n                    <CardContent sx={{ p: 3 }}>\r\n                        <Grid container spacing={5}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Alert color=\"info\">\r\n                                    <MarkdownContainer>\r\n                                        <Markdown breaks={true}>\r\n                                            {DOMPurify.sanitize(GUIDE)}\r\n                                        </Markdown>\r\n                                    </MarkdownContainer>\r\n                                </Alert>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Form />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </ResponsiveContainer>\r\n        </TabView>\r\n    );\r\n};\r\n\r\nexport default Page;\r\n"],"names":["Form","t","useTranslation","enqueueSnackbar","useSnackbar","middleware","useMiddleware","statusVariants","pending","type","color","label","text","confirmed","rejected","register","setValue","getValue","reset","loading","handleSubmit","useForm","initialValues","rewards","active","handlePost","data","createOrUpdate","onSubmit","response","useEffect","async","getOptions","getRewardValue","index","key","defaultValue","get","setRewardValue","value","map","reward","idx","set","_jsxs","Box","children","sx","mb","length","_jsx","Alert","severity","icon","Typography","_reward$message","_reward$message2","status","message","_Fragment","Collapse","in","includes","variant","action","Chip","AlertTitle","Grid","container","spacing","alignItems","item","xs","TextField","min","max","size","onChange","e","target","InputProps","endAdornment","InputAdornment","position","Button","onClick","filter","SmsField","placeholder","Divider","my","handleAddReward","total","sumBy","Number","possiblity","content","startIcon","Icon","ListItem","disableGutters","disablePadding","ListItemButton","selected","disabled","some","_reward$message3","ListItemText","primary","secondary","ListItemIcon","Switch","checked","MarkdownContainer","styled","theme","marginTop","Page","TabView","title","props","Iconify","ResponsiveContainer","Card","CardContent","p","sm","Markdown","breaks","DOMPurify","md"],"sourceRoot":""}