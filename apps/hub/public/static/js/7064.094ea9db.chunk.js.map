{"version":3,"file":"static/js/7064.094ea9db.chunk.js","mappings":"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","sources":["components/FormSection.js","components/SingleFieldDialog.js","modules/authentication/pages/Settings/General.js"],"sourcesContent":["import { Grid, Typography } from \"@mui/material\";\r\n\r\nconst FormSection = ({\r\n    title,\r\n    description,\r\n    children\r\n}) => {\r\n    return (\r\n        <Grid container spacing={2} sx={{ mt: 3, py: 3 }}>\r\n            <Grid item xs={12} md={4}>\r\n                <Typography variant=\"h6\">{title}</Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">{description}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={8}>\r\n                {children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default FormSection;","import CloseIcon from \"@mui/icons-material/CloseOutlined\";\r\nimport {\r\n\tBox,\r\n\tButton,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tDivider,\r\n\tIconButton,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport ResponsiveDialog from \"./ResponsiveDialog\";\r\n\r\nconst SingleFieldDialog = ({\r\n\ttitle,\r\n\tdefaultValue,\r\n\tonSubmit,\r\n\topen,\r\n\tonClose,\r\n\trenderContent,\r\n\tdialogProps = {},\r\n}) => {\r\n\tconst [value, setValue] = useState(defaultValue);\r\n\tuseEffect(() => setValue(open ? defaultValue : null), [open]);\r\n\r\n\treturn (\r\n\t\t<ResponsiveDialog\r\n\t\t\topen={open}\r\n\t\t\tonClose={onClose}\r\n\t\t\tdialogProps={{ fullWidth: true, maxWidth: \"xs\", ...dialogProps }}\r\n\t\t>\r\n\t\t\t<DialogTitle\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Box>{title}</Box>\r\n\t\t\t\t<IconButton onClick={onClose} size=\"small\">\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<Divider />\r\n\t\t\t<DialogContent>\r\n\t\t\t\t{renderContent && renderContent({ value, setValue })}\r\n\t\t\t</DialogContent>\r\n\t\t\t<Divider />\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tonClick={(e) => onSubmit(value)}\r\n\t\t\t\t>\r\n\t\t\t\t\tثبت\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Box sx={{ flexGrow: 1 }}></Box>\r\n\t\t\t\t<Button type=\"button\" onClick={onClose}>\r\n\t\t\t\t\tانصراف\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</ResponsiveDialog>\r\n\t);\r\n};\r\n\r\nexport default SingleFieldDialog;\r\n","import { Box, Container, Divider, Grid, ListItem, ListItemButton, ListItemText } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useOutletContext } from \"react-router\";\r\nimport FormSection from \"../../../../components/FormSection\";\r\nimport SingleFieldDialog from \"../../../../components/SingleFieldDialog\";\r\nimport TextField from \"../../../../components/TextField\";\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport AdapterJalali from '@date-io/date-fns-jalali';\r\nimport { DatePicker } from \"@mui/x-date-pickers\";\r\n\r\nconst General = () => {\r\n    const { form } = useOutletContext();\r\n\r\n    const { handleSubmit, getValue, setValue, setValues } = form;\r\n\r\n    const [fieldDialogProps, setFieldDialogProps] = useState({ open: false });\r\n    const openField = (renderContent, options = {}) => {\r\n        return () => {\r\n            setFieldDialogProps({\r\n                renderContent,\r\n                ...options,\r\n                open: true,\r\n            });\r\n        };\r\n    };\r\n\r\n    // useAfterFirstRender(() => {\r\n    //     handleSubmit();\r\n    // }, [getValue(\"firstName\"), getValue(\"lastName\")]);\r\n\r\n    const changeAndSubmit = (data) => {\r\n        setValues(data);\r\n        setFieldDialogProps({ open: false });\r\n        handleSubmit();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"lg\">\r\n                <FormSection\r\n                    title=\"مشخصات هویتی\"\r\n                    description=\"مشخصات عمومی میز کار که در برنامه های مختلف استفاده می‌شوند.\"\r\n                >\r\n                    <ListItem disableGutters disablePadding>\r\n                        <ListItemButton\r\n                            selected\r\n                            onClick={openField(\r\n                                ({ value, setValue }) => (\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item xs={12}>\r\n                                            <TextField\r\n                                                InputLabelProps={{ shrink: true }}\r\n                                                fullWidth={true}\r\n                                                label=\"نام\"\r\n                                                variant=\"filled\"\r\n                                                value={value?.firstName || ''}\r\n                                                onChange={(e) =>\r\n                                                    setValue({ ...value, firstName: e.target.value })\r\n                                                }\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <TextField\r\n                                                InputLabelProps={{ shrink: true }}\r\n                                                fullWidth={true}\r\n                                                label=\"نام خانوادگی\"\r\n                                                variant=\"filled\"\r\n                                                value={value?.lastName || ''}\r\n                                                onChange={(e) =>\r\n                                                    setValue({ ...value, lastName: e.target.value })\r\n                                                }\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                ),\r\n                                {\r\n                                    title: \"نام و نام خانوادگی\",\r\n                                    defaultValue: { firstName: getValue(\"firstName\"), lastName: getValue(\"lastName\") },\r\n                                    onSubmit: (value) => changeAndSubmit({ ...(value ?? {}) }),\r\n                                }\r\n                            )}\r\n                        >\r\n                            <ListItemText\r\n                                primary={getValue(\"firstName\") || \"-\"}\r\n                                secondary='نام و نام خانوادگی'\r\n                            />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n\r\n                    <Box sx={{ my: 1 }} />\r\n\r\n                    <ListItem disableGutters disablePadding>\r\n                        <ListItemButton\r\n                            selected\r\n                            onClick={openField(\r\n                                ({ value, setValue }) => (\r\n                                    <LocalizationProvider dateAdapter={AdapterJalali}>\r\n                                        <DatePicker\r\n                                            mask=\"____/__/__\"\r\n                                            onChange={setValue}\r\n                                            value={value}\r\n                                            renderInput={\r\n                                                (params) => (\r\n                                                    <TextField\r\n                                                        InputLabelProps={{ shrink: true }}\r\n                                                        fullWidth={true}\r\n                                                        size=\"small\"\r\n                                                        {...params}\r\n                                                    />\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </LocalizationProvider>\r\n                                ),\r\n                                {\r\n                                    title: \"تاریخ تولد\",\r\n                                    defaultValue: getValue(\"bornAt\"),\r\n                                    onSubmit: (value) => {\r\n                                        setValue(\"bornAt\", value);\r\n                                        setFieldDialogProps({ open: false });\r\n                                    },\r\n                                }\r\n                            )}\r\n                        >\r\n                            <ListItemText\r\n                                primary={getValue(\"bornAt\") || \"-\"}\r\n                                secondary='تاریخ تولد'\r\n                            />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                </FormSection>\r\n                <Divider />\r\n            </Container>\r\n\r\n            <SingleFieldDialog\r\n                {...fieldDialogProps}\r\n                onClose={() => setFieldDialogProps({ open: false })}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default General;"],"names":["FormSection","title","description","children","_jsxs","Grid","container","spacing","sx","mt","py","item","xs","md","_jsx","Typography","variant","color","SingleFieldDialog","defaultValue","onSubmit","open","onClose","renderContent","dialogProps","value","setValue","useState","useEffect","ResponsiveDialog","fullWidth","maxWidth","DialogTitle","display","justifyContent","alignItems","Box","IconButton","onClick","size","CloseIcon","Divider","DialogContent","DialogActions","Button","type","e","flexGrow","General","form","useOutletContext","handleSubmit","getValue","setValues","fieldDialogProps","setFieldDialogProps","openField","options","_Fragment","Container","ListItem","disableGutters","disablePadding","ListItemButton","selected","TextField","InputLabelProps","shrink","label","firstName","onChange","target","lastName","changeAndSubmit","data","ListItemText","primary","secondary","my","LocalizationProvider","dateAdapter","AdapterJalali","DatePicker","mask","renderInput","params"],"sourceRoot":""}