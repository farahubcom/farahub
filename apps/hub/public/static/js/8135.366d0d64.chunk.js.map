{"version":3,"file":"static/js/8135.366d0d64.chunk.js","mappings":"8RAIA,MAAMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAK,CAC1BC,kBAAmBC,GAAiB,WAATA,GADbH,EAEf,EAAGI,QAAOC,aAAQ,CACjBC,aAAcF,EAAMG,MAAMD,gBACtBD,GAAU,CACVG,SAAU,WACVC,gBAAiBL,EAAMM,QAAQC,KAAK,KACpCC,MAAOR,EAAMM,QAAQC,KAAK,KAC1BE,OAAQ,UACRC,QAAS,oBAIXC,GAAUf,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAY,EAAGI,YAAO,CAClCI,SAAU,WACVQ,KAAM,EACNC,IAAK,EACLC,MAAO,OACPC,OAAQ,OACRL,QAAS,OACTM,WAAY,SACZC,eAAgB,SAChBT,MAAOR,EAAMM,QAAQY,OAAOC,UAiBhC,EAboBC,EAAGC,eACnB,MAAOpB,EAAQqB,IAAaC,EAAAA,EAAAA,WAAS,GAIrC,OACIC,EAAAA,EAAAA,MAAC7B,EAAS,CAACM,OAAQA,EAAQwB,QAHhBC,IAAMJ,GAAU,GAGgBD,SAAA,CACtCpB,IAAU0B,EAAAA,EAAAA,KAAChB,EAAO,CAAAU,UAACM,EAAAA,EAAAA,KAACC,EAAAA,EAAqB,CAACC,SAAS,cACnDR,IACO,E,eC7BpB,MAAMS,EAAqBA,EAAGC,SAAQC,cAElC,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,MAEnB,OACIP,EAAAA,EAAAA,KAACQ,EAAAA,EAAW,CACRC,MAAM,iCACNJ,QAASA,EACTK,KAAMC,IAAO,CACT,CAAEF,MAAO,kCAAUG,SAAU,IAAKC,aAAab,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAAApB,SAAEU,EAAOW,QAC7D,CAAEN,MAAO,gEAAeG,SAAU,IAAKC,YAAaT,EAAOY,OAAQhB,EAAAA,EAAAA,KAACP,EAAW,CAAAC,UAACM,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAAApB,SAAEU,EAAOY,UAA8B,KAC5H,CAAEP,MAAO,0DAAcG,SAAU,IAAKC,YAAaT,EAAOa,OAAQjB,EAAAA,EAAAA,KAACP,EAAW,CAAAC,UAACM,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAAApB,SAAEU,EAAOa,UAA8B,QACvHX,EAAO,SAAU,kCAAmC,CAAEF,SAAQC,aAAc,KAGjFa,GAAKA,EAAEN,YACZ,EA4BV,EAvBuBO,IAEnB,MAAM,OAAEb,IAAWC,EAAAA,EAAAA,OAEb,OAAEH,EAAM,QAAEC,IAAYe,EAAAA,EAAAA,MAG5B,OACIpB,EAAAA,EAAAA,KAAC9B,EAAAA,EAAG,CAACmD,GAAI,CAAEC,EAAG,GAAI5B,UACdM,EAAAA,EAAAA,KAACuB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIlC,SAC5C,EACGM,EAAAA,EAAAA,KAACG,EAAkB,CAACC,OAAQA,EAAQC,QAASA,EAASO,SAAU,OAASO,OACrEb,EAAO,SAAU,8BAA+B,CAAEF,SAAQC,aAAc,IAC9EwB,KAAI,CAACC,EAAOC,KACV/B,EAAAA,EAAAA,KAACuB,EAAAA,GAAI,CAACS,MAAI,EAACN,GAAI,EAAEhC,SACZoC,GADkBC,KAGxBE,QAAO,CAACC,EAAMC,IAAU,CAACD,GAAMlC,EAAAA,EAAAA,KAACoC,EAAAA,EAAO,CAACC,YAAY,WAAWC,UAAQ,EAACjB,GAAI,CAAEkB,GAAI,OAAQxD,QAAS,CAAE2C,GAAI,OAAQC,GAAI,WAAiBa,EAAAA,EAAAA,MAAcL,QAEzJ,C","sources":["components/SpoilerText.js","modules/people/pages/PersonDetails/PersonOverview.js"],"sourcesContent":["import VisibilityOffOutlined from \"@mui/icons-material/VisibilityOffOutlined\";\r\nimport { Box, styled } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\nconst Container = styled(Box, {\r\n    shouldForwardProp: prop => prop !== 'hidden'\r\n})(({ theme, hidden }) => ({\r\n    borderRadius: theme.shape.borderRadius,\r\n    ...(hidden && {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[400],\r\n        color: theme.palette.grey[400],\r\n        cursor: 'pointer',\r\n        display: 'inline-block'\r\n    })\r\n}))\r\n\r\nconst Overlay = styled(Box)(({ theme }) => ({\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white\r\n}))\r\n\r\n\r\nconst SpoilerText = ({ children }) => {\r\n    const [hidden, setHidden] = useState(true);\r\n\r\n    const reveal = () => setHidden(false);\r\n\r\n    return (\r\n        <Container hidden={hidden} onClick={reveal}>\r\n            {hidden && <Overlay><VisibilityOffOutlined fontSize=\"inherit\" /></Overlay>}\r\n            {children}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SpoilerText;","import { Box, Divider, Grid } from \"@mui/material\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useAuth } from \"../../../../auth\";\r\nimport DataListBox from \"../../../../components/DataListBox\";\r\nimport SpoilerText from \"../../../../components/SpoilerText\";\r\nimport Text from \"../../../../components/Text\";\r\n\r\n\r\nconst PersonInfoGridItem = ({ person, loading }) => {\r\n\r\n    const { inject } = useAuth();\r\n\r\n    return (\r\n        <DataListBox\r\n            title=\"عمومی\"\r\n            loading={loading}\r\n            data={sortBy([\r\n                { title: 'کد شخص', priority: 100, description: <Text>{person.code}</Text> },\r\n                { title: 'شماره همراه', priority: 200, description: person.phone ? <SpoilerText><Text>{person.phone}</Text></SpoilerText> : '-' },\r\n                { title: 'آدرس ایمیل', priority: 300, description: person.email ? <SpoilerText><Text>{person.email}</Text></SpoilerText> : '-' },\r\n                ...(inject('People', 'PersonDetails.Overview.DataList', { person, loading }) || [])\r\n                // { title: 'آدرس', description: <Text>{person.fullAddress}</Text> || '-' },\r\n                // { title: 'یادداشت', description: <Text>{person.note}</Text> || '-' },\r\n            ], o => o.priority)}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nconst PersonOverview = props => {\r\n\r\n    const { inject } = useAuth();\r\n\r\n    const { person, loading } = useOutletContext();\r\n\r\n\r\n    return (\r\n        <Box sx={{ p: 2 }}>\r\n            <Grid container columns={{ xs: 1, sm: 2, md: 3 }}>\r\n                {[\r\n                    <PersonInfoGridItem person={person} loading={loading} priority={100} {...props} />,\r\n                    ...(inject('people', 'PersonDetails.Overview.Grid', { person, loading }) || [])\r\n                ].map((child, index) => (\r\n                    <Grid item xs={1} key={index}>\r\n                        {child}\r\n                    </Grid>\r\n                )).reduce((prev, curr) => ([prev, <Divider orientation=\"vertical\" flexItem sx={{ mr: '-1px', display: { xs: 'none', sm: 'flex' } }} key={uuidv4()} />, curr]))}\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PersonOverview;"],"names":["Container","styled","Box","shouldForwardProp","prop","theme","hidden","borderRadius","shape","position","backgroundColor","palette","grey","color","cursor","display","Overlay","left","top","width","height","alignItems","justifyContent","common","white","SpoilerText","children","setHidden","useState","_jsxs","onClick","reveal","_jsx","VisibilityOffOutlined","fontSize","PersonInfoGridItem","person","loading","inject","useAuth","DataListBox","title","data","sortBy","priority","description","Text","code","phone","email","o","props","useOutletContext","sx","p","Grid","container","columns","xs","sm","md","map","child","index","item","reduce","prev","curr","Divider","orientation","flexItem","mr","uuidv4"],"sourceRoot":""}